<?xml version="1.0" encoding="UTF-8" standalone="no"?><note xmlns="http://note.youdao.com" file-version="0" schema-version="1.0.3"><head><list id="12-1639742179266" type="ordered"/></head><body><para><coId>88-1639742179201</coId><text>一. LBP特征</text><inline-styles><bold><from>0</from><to>8</to><value>true</value></bold><font-size><from>0</from><to>8</to><value>18</value></font-size><color><from>0</from><to>8</to><value>#4f4f4f</value></color></inline-styles><styles><line-height>1.4444444444444444</line-height><margin>8px 0px 16px</margin><font-size>18</font-size></styles></para><para><coId>22-1639742179394</coId><text/><inline-styles/><styles/></para><para><coId>62-1639742179206</coId><text>        LBP（Local Binary Pattern），局部二值模式，主要用于提取纹理特征，根据文献[1]我们可以了解到LBP及其变体。一般的使用方法是，先将图像转换为灰度图，接着计算LBP特征图，最后计算其直方图作为特征向量。</text><inline-styles><bold><from>110</from><to>113</to><value>true</value></bold><font-size><from>0</from><to>120</to><value>16</value></font-size><color><from>0</from><to>120</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><para><coId>51-1639742179394</coId><text/><inline-styles/><styles/></para><para><coId>91-1639742179213</coId><text>0.如何描述纹理信息</text><inline-styles><font-size><from>0</from><to>10</to><value>16</value></font-size><color><from>0</from><to>10</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><para><coId>94-1639742179394</coId><text/><inline-styles/><styles/></para><para><coId>71-1639742179215</coId><text>        不多说，看图。LBP特征可以表示平坦、边缘、角点等区域。</text><inline-styles><font-size><from>0</from><to>36</to><value>16</value></font-size><color><from>0</from><to>36</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><image><coId>34-1639742179217</coId><source>https://note.youdao.com/yws/res/20776/8691887DE5D04B84AAD710CD5AE99E91</source><text/><styles><align>center</align><width>620</width></styles></image><para><coId>14-1639742179219</coId><text>1.original LBP</text><inline-styles><font-size><from>0</from><to>14</to><value>16</value></font-size><color><from>0</from><to>14</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><para><coId>26-1639742179395</coId><text/><inline-styles/><styles/></para><para><coId>97-1639742179220</coId><text>        最经典的LBP特征，对于某像素的8-邻域，大于该像素值的置1，小于该像素值的置0，最后组成八位二进制码。</text><inline-styles><font-size><from>0</from><to>60</to><value>16</value></font-size><color><from>0</from><to>60</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><image><coId>34-1639742179222</coId><source>https://note.youdao.com/yws/res/20775/27F4E3E57DAD41D9AB49925D8707CCDD</source><text/><styles><align>center</align><width>620</width></styles></image><para><coId>63-1639742179223</coId><text>2.采样方式及角空间</text><inline-styles><font-size><from>0</from><to>10</to><value>16</value></font-size><color><from>0</from><to>10</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><para><coId>90-1639742179395</coId><text/><inline-styles/><styles/></para><para><coId>19-1639742179224</coId><text>        圆形邻域的像素采样方式会比8-邻域的方式要更灵活，可以通过改变圆形的半径R来调整邻域大小。但半径R越大，采样点的数目P也越多。对于没有落到像素格子中央的点的灰度值，一般采用插值法得到。</text><inline-styles><font-size><from>0</from><to>100</to><value>16</value></font-size><color><from>0</from><to>100</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><para><coId>19-1639742179395</coId><text/><inline-styles/><styles/></para><para><coId>30-1639742179227</coId><text>      除此之外，通过对采样角度设置更高的量化等级，可以得到更精细的角度分辨率。</text><inline-styles><font-size><from>0</from><to>42</to><value>16</value></font-size><color><from>0</from><to>42</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><image><coId>06-1639742179228</coId><source>https://note.youdao.com/yws/res/20774/95E4709B2A50499C95980059D53FEB79</source><text/><styles><align>center</align><width>620</width></styles></image><para><coId>74-1639742179228</coId><text>3.灰度不变性</text><inline-styles><font-size><from>0</from><to>7</to><value>16</value></font-size><color><from>0</from><to>7</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><para><coId>46-1639742179395</coId><text/><inline-styles/><styles/></para><para><coId>29-1639742179230</coId><text>        由于各邻域像素的灰度值需要减去中心像素的灰度值，可以实现针对平均光源的灰度不变性。</text><inline-styles><font-size><from>0</from><to>49</to><value>16</value></font-size><color><from>0</from><to>49</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><image><coId>11-1639742179231</coId><source>https://note.youdao.com/yws/res/20777/7A4564AD19F84043965528765BB59323</source><text/><styles><align>center</align><width>620</width></styles></image><para><coId>09-1639742179233</coId><text>4.旋转不变性</text><inline-styles><font-size><from>0</from><to>7</to><value>16</value></font-size><color><from>0</from><to>7</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><para><coId>52-1639742179396</coId><text/><inline-styles/><styles/></para><para><coId>13-1639742179233</coId><text>        由于编码的起始点是一定的，每一种二值编码模式经旋转（循环位移）后会产生不同的编码结果。为了形成旋转不变的编码模式，我们让有同一编码模式经旋转后产生的编码结果编码为同一值，定义二值编码为这些旋转结果中的最小值。</text><inline-styles><font-size><from>0</from><to>112</to><value>16</value></font-size><color><from>0</from><to>112</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><para><coId>50-1639742179396</coId><text/><inline-styles/><styles/></para><para><coId>24-1639742179236</coId><text>        在具体代码实现时，通过使用计算映射(mapping)的方式来将不同的旋转二值编码映射为旋转不变的二值编码。</text><inline-styles><font-size><from>0</from><to>61</to><value>16</value></font-size><color><from>0</from><to>61</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><image><coId>02-1639742179240</coId><source>https://note.youdao.com/yws/res/20778/E454C137466A47E49FCE17C75CA10C5D</source><text/><styles><align>center</align><width>620</width></styles></image><para><coId>61-1639742179240</coId><text>5.uniform LBP</text><inline-styles><font-size><from>0</from><to>13</to><value>16</value></font-size><color><from>0</from><to>13</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><para><coId>40-1639742179396</coId><text/><inline-styles/><styles/></para><para><coId>80-1639742179241</coId><text>        首先，我们将LBP的二值编码看作是头尾相接的，接着定义计数U为二值编码中0-1变化的次数(即0变成1,或者1变成0,记做一次)，公式表达如下：</text><inline-styles><bold><from>35</from><to>38</to><value>true</value></bold><font-size><from>0</from><to>79</to><value>16</value></font-size><color><from>0</from><to>79</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><image><coId>69-1639742179243</coId><source>https://note.youdao.com/yws/res/20779/59E8FC2646884FCDA455BC2923BFFBA7</source><text/><styles><align>center</align><width>620</width></styles></image><para><coId>23-1639742179243</coId><text>        对于U值小于等于2的二值编码，我们定义其为uniform pattern，例如半径为1，采样点为8的LBP特征有如下8种uniform pattern:</text><inline-styles><font-size><from>0</from><to>84</to><value>16</value></font-size><color><from>0</from><to>84</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><image><coId>42-1639742179246</coId><source>https://note.youdao.com/yws/res/20782/6DE30C11F3404E919A24710AE287A0CA</source><text/><styles><align>center</align><width>620</width></styles></image><para><coId>95-1639742179247</coId><text>        而对于其它的非uniform编码，我们将其归为一类。之所以这样定义，是因为这类编码易受噪声影响，变化频率非常大。</text><inline-styles><font-size><from>0</from><to>64</to><value>16</value></font-size><color><from>0</from><to>64</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><para><coId>29-1639742179396</coId><text/><inline-styles/><styles/></para><para><coId>22-1639742179248</coId><text>        最终的uniform LBP计算公式如下：</text><inline-styles><font-size><from>0</from><to>29</to><value>16</value></font-size><color><from>0</from><to>29</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><image><coId>04-1639742179250</coId><source>https://note.youdao.com/yws/res/20780/2130527033444BCA8937DB9C8E191878</source><text/><styles><align>center</align><width>620</width></styles></image><para><coId>74-1639742179250</coId><text>        总结一下，对于8个采样点的LBP，灰度不变LBP有256种编码输出，旋转不变LBP有36种编码输出，而uniform旋转不变LBP只有9种编码输出(8种uniform编码和剩余的非uniform编码)，非旋转不变的uniform LBP有58种输出。</text><inline-styles><font-size><from>0</from><to>133</to><value>16</value></font-size><color><from>0</from><to>133</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><para><coId>26-1639742179396</coId><text/><inline-styles/><styles/></para><para><coId>49-1639742179252</coId><text>6.结合对比度的LBP</text><inline-styles><font-size><from>0</from><to>11</to><value>16</value></font-size><color><from>0</from><to>11</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><para><coId>55-1639742179396</coId><text/><inline-styles/><styles/></para><para><coId>16-1639742179252</coId><text>        根据灰度不变LBP的定义，我们直接舍弃了像素点间的灰度幅值差异，进而丢失了对比度的信息（即灰度值的方差）。因此，我们考虑结合对比度Var和LBP作为联合特征. 对比度计算公式如下：</text><inline-styles><font-size><from>0</from><to>98</to><value>16</value></font-size><color><from>0</from><to>98</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><image><coId>04-1639742179254</coId><source>https://note.youdao.com/yws/res/20781/26974EEFBDC845C494CC7501A41C0D4E</source><text/><styles><align>center</align><width>620</width></styles></image><para><coId>52-1639742179255</coId><text>二. Python实现</text><inline-styles><bold><from>0</from><to>3</to><value>true</value></bold><bold><from>9</from><to>11</to><value>true</value></bold><font-size><from>0</from><to>11</to><value>18</value></font-size><color><from>0</from><to>3</to><value>#4f4f4f</value></color><color><from>3</from><to>9</to><value>#fc5531</value></color><color><from>9</from><to>11</to><value>#4f4f4f</value></color><href><from>3</from><to>9</to><value>https://so.csdn.net/so/search?from=pc_blog_highlight&amp;q=Python</value></href></inline-styles><styles><line-height>1.4444444444444444</line-height><margin>8px 0px 16px</margin><font-size>18</font-size></styles></para><para><coId>33-1639742179397</coId><text/><inline-styles/><styles/></para><para><coId>17-1639742179256</coId><text>        在研究了网上LBP的代码实现后，我认为使用ski-image包的LBP特征提取函数比较好，因为它封装了多种LBP的方法，非常简单易用。官网上的参考文档如下：</text><inline-styles><font-size><from>0</from><to>86</to><value>16</value></font-size><color><from>0</from><to>86</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><table><coId>36-1639742179262</coId><content>{"widths":[98,864],"heights":[622.815,108.95],"cells":[{"value":"Parameters:","verticalAlign":"middle","textAlign":"left","textColor":"#4f4f4f","backColor":"rgb(239, 243, 245)","bold":"true","fontSize":"14px"},{"value":"image : (N, M) array\nGraylevel image.\nP : int\nNumber of circularly symmetric neighbour set points (quantization ofthe angular space).\nR : float\nRadius of circle (spatial resolution of the operator).\nmethod : {‘default’, ‘ror’, ‘uniform’, ‘var’}\nMethod to determine the pattern.\n‘default’: original local binary pattern which is gray scale but not rotation invariant.\n‘ror’: extension of default implementation which is gray scale and rotation invariant.\n‘uniform’: improved rotation invariance with uniform patterns and finer quantization of the angular space which is gray scale and rotation invariant.\n‘nri_uniform’: non rotation-invariant uniform patterns variant which is only gray scale invariant.\n‘var’: rotation invariant variance measures of the contrast of localimage texture which is rotation but not gray scale invariant.","fontSize":"16px","textColor":"#4f4f4f","textAlign":"left","verticalAlign":"middle","backColor":"rgba(0, 0, 0, 0)"},{"value":"Returns:","verticalAlign":"middle","textAlign":"left","textColor":"#4f4f4f","backColor":"rgb(239, 243, 245)","bold":"true","fontSize":"14px"},{"value":"output : (N, M) array\nLBP image.","fontSize":"16px","textColor":"#4f4f4f","textAlign":"left","verticalAlign":"middle","backColor":"rgba(0, 0, 0, 0)"}]}</content><styles/></table><para><coId>02-1639742179263</coId><text>代码例程：</text><inline-styles><font-size><from>0</from><to>5</to><value>16</value></font-size><color><from>0</from><to>5</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><list-item level="1" list-id="12-1639742179266"><coId>86-1639742179269</coId><text># settings for LBP</text><inline-styles><italic><from>0</from><to>18</to><value>true</value></italic><color><from>0</from><to>18</to><value>#5c6370</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>99-1639742179272</coId><text>radius = 2</text><inline-styles><color><from>0</from><to>9</to><value>#abb2bf</value></color><color><from>9</from><to>10</to><value>#d19a66</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>04-1639742179274</coId><text>n_points = 8 * radius</text><inline-styles><color><from>0</from><to>11</to><value>#abb2bf</value></color><color><from>11</from><to>12</to><value>#d19a66</value></color><color><from>12</from><to>21</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>31-1639742179281</coId><text>defkullback_leibler_divergence(p, q):</text><inline-styles><color><from>0</from><to>3</to><value>#c678dd</value></color><color><from>3</from><to>30</to><value>#61aeee</value></color><color><from>30</from><to>37</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>20-1639742179283</coId><text>    p = np.asarray(p)</text><inline-styles><color><from>0</from><to>21</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>97-1639742179286</coId><text>    q = np.asarray(q)</text><inline-styles><color><from>0</from><to>21</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>79-1639742179290</coId><text>    filt = np.logical_and(p != 0, q != 0)</text><inline-styles><color><from>0</from><to>31</to><value>#abb2bf</value></color><color><from>31</from><to>32</to><value>#d19a66</value></color><color><from>32</from><to>39</to><value>#abb2bf</value></color><color><from>39</from><to>40</to><value>#d19a66</value></color><color><from>40</from><to>41</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>59-1639742179294</coId><text>return np.sum(p[filt] * np.log2(p[filt] / q[filt]))</text><inline-styles><color><from>0</from><to>6</to><value>#c678dd</value></color><color><from>6</from><to>10</to><value>#abb2bf</value></color><color><from>10</from><to>13</to><value>#e6c07b</value></color><color><from>13</from><to>51</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>95-1639742179299</coId><text>defmatch(refs, img):</text><inline-styles><color><from>0</from><to>3</to><value>#c678dd</value></color><color><from>3</from><to>8</to><value>#61aeee</value></color><color><from>8</from><to>20</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>73-1639742179300</coId><text>    best_score = 10</text><inline-styles><color><from>0</from><to>17</to><value>#abb2bf</value></color><color><from>17</from><to>19</to><value>#d19a66</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>45-1639742179302</coId><text>    best_name = None</text><inline-styles><color><from>0</from><to>16</to><value>#abb2bf</value></color><color><from>16</from><to>20</to><value>#56b6c2</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>08-1639742179305</coId><text>    lbp = local_binary_pattern(img, n_points, radius, METHOD)</text><inline-styles><color><from>0</from><to>61</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>80-1639742179308</coId><text>    n_bins = int(lbp.max() + 1)</text><inline-styles><color><from>0</from><to>13</to><value>#abb2bf</value></color><color><from>13</from><to>16</to><value>#e6c07b</value></color><color><from>16</from><to>21</to><value>#abb2bf</value></color><color><from>21</from><to>24</to><value>#e6c07b</value></color><color><from>24</from><to>29</to><value>#abb2bf</value></color><color><from>29</from><to>30</to><value>#d19a66</value></color><color><from>30</from><to>31</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>44-1639742179311</coId><text>    hist, _ = np.histogram(lbp, normed=True, bins=n_bins, range=(0, n_bins))</text><inline-styles><color><from>0</from><to>39</to><value>#abb2bf</value></color><color><from>39</from><to>43</to><value>#56b6c2</value></color><color><from>43</from><to>58</to><value>#abb2bf</value></color><color><from>58</from><to>63</to><value>#e6c07b</value></color><color><from>63</from><to>65</to><value>#abb2bf</value></color><color><from>65</from><to>66</to><value>#d19a66</value></color><color><from>66</from><to>76</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>77-1639742179313</coId><text>for name, ref in refs.items():</text><inline-styles><color><from>0</from><to>3</to><value>#c678dd</value></color><color><from>3</from><to>14</to><value>#abb2bf</value></color><color><from>14</from><to>16</to><value>#c678dd</value></color><color><from>16</from><to>30</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>90-1639742179316</coId><text>        ref_hist, _ = np.histogram(ref, normed=True, bins=n_bins,</text><inline-styles><color><from>0</from><to>47</to><value>#abb2bf</value></color><color><from>47</from><to>51</to><value>#56b6c2</value></color><color><from>51</from><to>65</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>69-1639742179318</coId><text>range=(0, n_bins))</text><inline-styles><color><from>0</from><to>5</to><value>#e6c07b</value></color><color><from>5</from><to>7</to><value>#abb2bf</value></color><color><from>7</from><to>8</to><value>#d19a66</value></color><color><from>8</from><to>18</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>10-1639742179321</coId><text>        score = kullback_leibler_divergence(hist, ref_hist)</text><inline-styles><color><from>0</from><to>59</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>44-1639742179322</coId><text>if score &lt; best_score:</text><inline-styles><color><from>0</from><to>2</to><value>#c678dd</value></color><color><from>2</from><to>22</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>97-1639742179324</coId><text>            best_score = score</text><inline-styles><color><from>0</from><to>30</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>57-1639742179325</coId><text>            best_name = name</text><inline-styles><color><from>0</from><to>28</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>73-1639742179327</coId><text>return best_name</text><inline-styles><color><from>0</from><to>6</to><value>#c678dd</value></color><color><from>6</from><to>16</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>06-1639742179330</coId><text>brick = data.load('brick.png')</text><inline-styles><color><from>0</from><to>18</to><value>#abb2bf</value></color><color><from>18</from><to>29</to><value>#98c379</value></color><color><from>29</from><to>30</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>43-1639742179331</coId><text>grass = data.load('grass.png')</text><inline-styles><color><from>0</from><to>18</to><value>#abb2bf</value></color><color><from>18</from><to>29</to><value>#98c379</value></color><color><from>29</from><to>30</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>79-1639742179333</coId><text>wall = data.load('rough-wall.png')</text><inline-styles><color><from>0</from><to>17</to><value>#abb2bf</value></color><color><from>17</from><to>33</to><value>#98c379</value></color><color><from>33</from><to>34</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>56-1639742179335</coId><text>refs = {</text><inline-styles><color><from>0</from><to>8</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>18-1639742179337</coId><text>'brick': local_binary_pattern(brick, n_points, radius, METHOD),</text><inline-styles><color><from>0</from><to>7</to><value>#98c379</value></color><color><from>7</from><to>63</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>35-1639742179339</coId><text>'grass': local_binary_pattern(grass, n_points, radius, METHOD),</text><inline-styles><color><from>0</from><to>7</to><value>#98c379</value></color><color><from>7</from><to>63</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>03-1639742179341</coId><text>'wall': local_binary_pattern(wall, n_points, radius, METHOD)</text><inline-styles><color><from>0</from><to>6</to><value>#98c379</value></color><color><from>6</from><to>60</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>43-1639742179342</coId><text>}</text><inline-styles><color><from>0</from><to>1</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>37-1639742179344</coId><text># classify rotated textures</text><inline-styles><italic><from>0</from><to>27</to><value>true</value></italic><color><from>0</from><to>27</to><value>#5c6370</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>39-1639742179346</coId><text>print('Rotated images matched against references using LBP:')</text><inline-styles><color><from>0</from><to>5</to><value>#e6c07b</value></color><color><from>5</from><to>6</to><value>#abb2bf</value></color><color><from>6</from><to>60</to><value>#98c379</value></color><color><from>60</from><to>61</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>64-1639742179349</coId><text>print('original: brick, rotated: 30deg, match result: ',</text><inline-styles><color><from>0</from><to>5</to><value>#e6c07b</value></color><color><from>5</from><to>6</to><value>#abb2bf</value></color><color><from>6</from><to>55</to><value>#98c379</value></color><color><from>55</from><to>56</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>87-1639742179351</coId><text>      match(refs, rotate(brick, angle=30, resize=False)))</text><inline-styles><color><from>0</from><to>38</to><value>#abb2bf</value></color><color><from>38</from><to>40</to><value>#d19a66</value></color><color><from>40</from><to>49</to><value>#abb2bf</value></color><color><from>49</from><to>54</to><value>#56b6c2</value></color><color><from>54</from><to>57</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>92-1639742179353</coId><text>print('original: brick, rotated: 70deg, match result: ',</text><inline-styles><color><from>0</from><to>5</to><value>#e6c07b</value></color><color><from>5</from><to>6</to><value>#abb2bf</value></color><color><from>6</from><to>55</to><value>#98c379</value></color><color><from>55</from><to>56</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>26-1639742179355</coId><text>      match(refs, rotate(brick, angle=70, resize=False)))</text><inline-styles><color><from>0</from><to>38</to><value>#abb2bf</value></color><color><from>38</from><to>40</to><value>#d19a66</value></color><color><from>40</from><to>49</to><value>#abb2bf</value></color><color><from>49</from><to>54</to><value>#56b6c2</value></color><color><from>54</from><to>57</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>98-1639742179358</coId><text>print('original: grass, rotated: 145deg, match result: ',</text><inline-styles><color><from>0</from><to>5</to><value>#e6c07b</value></color><color><from>5</from><to>6</to><value>#abb2bf</value></color><color><from>6</from><to>56</to><value>#98c379</value></color><color><from>56</from><to>57</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>18-1639742179360</coId><text>      match(refs, rotate(grass, angle=145, resize=False)))</text><inline-styles><color><from>0</from><to>38</to><value>#abb2bf</value></color><color><from>38</from><to>41</to><value>#d19a66</value></color><color><from>41</from><to>50</to><value>#abb2bf</value></color><color><from>50</from><to>55</to><value>#56b6c2</value></color><color><from>55</from><to>58</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>62-1639742179363</coId><text># plot histograms of LBP of textures</text><inline-styles><italic><from>0</from><to>36</to><value>true</value></italic><color><from>0</from><to>36</to><value>#5c6370</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>54-1639742179365</coId><text>fig, ((ax1, ax2, ax3), (ax4, ax5, ax6)) = plt.subplots(nrows=2, ncols=3,</text><inline-styles><color><from>0</from><to>61</to><value>#abb2bf</value></color><color><from>61</from><to>62</to><value>#d19a66</value></color><color><from>62</from><to>70</to><value>#abb2bf</value></color><color><from>70</from><to>71</to><value>#d19a66</value></color><color><from>71</from><to>72</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>23-1639742179368</coId><text>                                                       figsize=(9, 6))</text><inline-styles><color><from>0</from><to>64</to><value>#abb2bf</value></color><color><from>64</from><to>65</to><value>#d19a66</value></color><color><from>65</from><to>67</to><value>#abb2bf</value></color><color><from>67</from><to>68</to><value>#d19a66</value></color><color><from>68</from><to>70</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>63-1639742179369</coId><text>plt.gray()</text><inline-styles><color><from>0</from><to>10</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>96-1639742179371</coId><text>ax1.imshow(brick)</text><inline-styles><color><from>0</from><to>17</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>16-1639742179372</coId><text>ax1.axis('off')</text><inline-styles><color><from>0</from><to>9</to><value>#abb2bf</value></color><color><from>9</from><to>14</to><value>#98c379</value></color><color><from>14</from><to>15</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>10-1639742179373</coId><text>hist(ax4, refs['brick'])</text><inline-styles><color><from>0</from><to>15</to><value>#abb2bf</value></color><color><from>15</from><to>22</to><value>#98c379</value></color><color><from>22</from><to>24</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>40-1639742179375</coId><text>ax4.set_ylabel('Percentage')</text><inline-styles><color><from>0</from><to>15</to><value>#abb2bf</value></color><color><from>15</from><to>27</to><value>#98c379</value></color><color><from>27</from><to>28</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>21-1639742179377</coId><text>ax2.imshow(grass)</text><inline-styles><color><from>0</from><to>17</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>92-1639742179379</coId><text>ax2.axis('off')</text><inline-styles><color><from>0</from><to>9</to><value>#abb2bf</value></color><color><from>9</from><to>14</to><value>#98c379</value></color><color><from>14</from><to>15</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>94-1639742179380</coId><text>hist(ax5, refs['grass'])</text><inline-styles><color><from>0</from><to>15</to><value>#abb2bf</value></color><color><from>15</from><to>22</to><value>#98c379</value></color><color><from>22</from><to>24</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>87-1639742179382</coId><text>ax5.set_xlabel('Uniform LBP values')</text><inline-styles><color><from>0</from><to>15</to><value>#abb2bf</value></color><color><from>15</from><to>35</to><value>#98c379</value></color><color><from>35</from><to>36</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>15-1639742179384</coId><text>ax3.imshow(wall)</text><inline-styles><color><from>0</from><to>16</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>27-1639742179386</coId><text>ax3.axis('off')</text><inline-styles><color><from>0</from><to>9</to><value>#abb2bf</value></color><color><from>9</from><to>14</to><value>#98c379</value></color><color><from>14</from><to>15</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>76-1639742179387</coId><text>hist(ax6, refs['wall'])</text><inline-styles><color><from>0</from><to>15</to><value>#abb2bf</value></color><color><from>15</from><to>21</to><value>#98c379</value></color><color><from>21</from><to>23</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="12-1639742179266"><coId>26-1639742179389</coId><text>plt.show()</text><inline-styles><color><from>0</from><to>10</to><value>#abb2bf</value></color></inline-styles><styles/></list-item><para><coId>84-1639742179389</coId><text>结果如下：</text><inline-styles><font-size><from>0</from><to>5</to><value>16</value></font-size><color><from>0</from><to>5</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><image><coId>98-1639742179389</coId><source>https://note.youdao.com/yws/res/20783/8F35456E1097460D9F8B5F581B742BA2</source><text/><styles><align>center</align><width>620</width></styles></image><para><coId>26-1639742179390</coId><text/><inline-styles/><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><para><coId>25-1639742179390</coId><text>网站参考：</text><inline-styles><font-size><from>0</from><to>5</to><value>16</value></font-size><color><from>0</from><to>5</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><para><coId>83-1639742179404</coId><text/><inline-styles/><styles/></para><para><coId>32-1639742179390</coId><text>doc文档</text><inline-styles><font-size><from>0</from><to>5</to><value>16</value></font-size><color><from>0</from><to>5</to><value>#4ea1db</value></color><href><from>0</from><to>5</to><value>http://scikit-image.org/docs/stable/api/skimage.feature.html?highlight=local_binary_pattern#skimage.feature.local_binary_pattern</value></href></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><para><coId>39-1639742179404</coId><text/><inline-styles/><styles/></para><para><coId>75-1639742179390</coId><text>官方例程</text><inline-styles><font-size><from>0</from><to>4</to><value>16</value></font-size><color><from>0</from><to>4</to><value>#4ea1db</value></color><href><from>0</from><to>4</to><value>http://scikit-image.org/docs/dev/auto_examples/features_detection/plot_local_binary_pattern.html</value></href></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><para><coId>63-1639742179391</coId><text/><inline-styles/><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><para><coId>12-1639742179391</coId><text>参考文献：</text><inline-styles><font-size><from>0</from><to>5</to><value>16</value></font-size><color><from>0</from><to>5</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><para><coId>98-1639742179404</coId><text/><inline-styles/><styles/></para><para><coId>38-1639742179391</coId><text>[1] Ojala T, Pietikäinen M, Mäenpää T. Multiresolution Gray-Scale and Rotation Invariant Texture Classification with Local Binary Patterns[C]// European Conference on Computer Vision. Springer-Verlag, 2000:404-420.</text><inline-styles><font-size><from>0</from><to>214</to><value>16</value></font-size><color><from>0</from><to>214</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para><para><coId>16-1639742179404</coId><text/><inline-styles/><styles/></para><para><coId>17-1639742179392</coId><text>[2] Walt S V D, Schönberger J L, Nuneziglesias J, et al. scikit-image: image processing in Python[J]. Peerj, 2014, 2(2):e453.</text><inline-styles><font-size><from>0</from><to>125</to><value>16</value></font-size><color><from>0</from><to>125</to><value>#4d4d4d</value></color></inline-styles><styles><line-height>1.625</line-height><margin>0px 0px 16px</margin><font-size>16</font-size></styles></para></body></note>