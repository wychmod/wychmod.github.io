<?xml version="1.0" encoding="UTF-8" standalone="no"?><note xmlns="http://note.youdao.com" file-version="0" schema-version="1.0.3"><head><list id="69-1580225598490" type="unordered"/><list id="15-1580225598554" type="unordered"/><header compat="true"><text/><styles><align>center</align></styles></header><footer compat="true"><text/><styles><align>center</align></styles></footer></head><body><para><coId>26-1580225598357</coId><text>P01: React Router 安装和基础环境搭建</text><inline-styles><bold><from>0</from><to>27</to><value>true</value></bold><font-size><from>0</from><to>27</to><value>20</value></font-size><color><from>0</from><to>27</to><value>#333333</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>27-1580225598367</coId><text>这节课我们就先安装一下React Router 学习开发的基础环境和作一个最简单的例子.</text><inline-styles><font-size><from>0</from><to>44</to><value>16</value></font-size><color><from>0</from><to>44</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>51-1580225598369</coId><text>用creact-react-app脚手架初始化项目</text><inline-styles><bold><from>0</from><to>25</to><value>true</value></bold><font-family><from>1</from><to>17</to><value>monospace</value></font-family><font-size><from>0</from><to>1</to><value>20</value></font-size><font-size><from>1</from><to>17</to><value>13</value></font-size><font-size><from>17</from><to>25</to><value>20</value></font-size><color><from>0</from><to>1</to><value>#666666</value></color><color><from>1</from><to>17</to><value>#ff502c</value></color><color><from>17</from><to>25</to><value>#666666</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>08-1580225598370</coId><text>1.如果你没有安装脚手架工具，你需要安装一下:</text><inline-styles><font-size><from>0</from><to>23</to><value>16</value></font-size><color><from>0</from><to>23</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>5047-1580225883156</coId><text>npm install -g create-react-app
</text><inline-styles><font-family><from>0</from><to>31</to><value>monospace</value></font-family><font-size><from>0</from><to>31</to><value>13</value></font-size><color><from>0</from><to>4</to><value>#cccccc</value></color><color><from>4</from><to>11</to><value>#f92672</value></color><color><from>11</from><to>15</to><value>#cccccc</value></color><color><from>15</from><to>21</to><value>#f92672</value></color><color><from>21</from><to>31</to><value>#cccccc</value></color></inline-styles><styles/><language>javascript</language><theme>default</theme></code><para><coId>89-1580225598373</coId><text/><inline-styles/><styles><font-size>16</font-size></styles></para><para><coId>11-1580225598374</coId><text>2.直接使用脚手架工具创建项目</text><inline-styles><font-size><from>0</from><to>15</to><value>16</value></font-size><color><from>0</from><to>15</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>7025-1580225888934</coId><text>D:  //进入D盘mkdir ReactRouterDemo   //创建ReactRouterDemo文件夹cd ReactRouterDemo      //进入文件夹create-react-appdemo01  //用脚手架创建React项目cd demo01   //等项目创建完成后，进入项目目录npm start  //预览项目
</text><inline-styles><font-family><from>0</from><to>172</to><value>monospace</value></font-family><font-size><from>0</from><to>172</to><value>13</value></font-size><color><from>0</from><to>10</to><value>#cccccc</value></color><color><from>10</from><to>32</to><value>#e6db74</value></color><color><from>32</from><to>38</to><value>#cccccc</value></color><color><from>38</from><to>54</to><value>#e6db74</value></color><color><from>54</from><to>56</to><value>#cccccc</value></color><color><from>56</from><to>75</to><value>#e6db74</value></color><color><from>75</from><to>87</to><value>#cccccc</value></color><color><from>87</from><to>110</to><value>#e6db74</value></color><color><from>110</from><to>119</to><value>#cccccc</value></color><color><from>119</from><to>125</to><value>#e6db74</value></color><color><from>125</from><to>126</to><value>#cccccc</value></color><color><from>126</from><to>136</to><value>#e6db74</value></color><color><from>136</from><to>155</to><value>#cccccc</value></color><color><from>155</from><to>165</to><value>#e6db74</value></color><color><from>165</from><to>172</to><value>#cccccc</value></color></inline-styles><styles/><language>javascript</language><theme>default</theme></code><para><coId>11-1580225598383</coId><text>这样项目就制作好了，我们删除一下没用的文件，让代码结构保持最小化。删除SRC里边的所有文件，只留一个index.js,并且index.js文件里也都清空。</text><inline-styles><font-family><from>50</from><to>58</to><value>monospace</value></font-family><font-family><from>61</from><to>69</to><value>monospace</value></font-family><font-size><from>0</from><to>50</to><value>16</value></font-size><font-size><from>50</from><to>58</to><value>13</value></font-size><font-size><from>58</from><to>61</to><value>16</value></font-size><font-size><from>61</from><to>69</to><value>13</value></font-size><font-size><from>69</from><to>77</to><value>16</value></font-size><color><from>0</from><to>50</to><value>#777777</value></color><color><from>50</from><to>58</to><value>#ff502c</value></color><color><from>58</from><to>61</to><value>#777777</value></color><color><from>61</from><to>69</to><value>#ff502c</value></color><color><from>69</from><to>77</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>08-1580225598385</coId><text>使用npm安装React Router</text><inline-styles><bold><from>0</from><to>19</to><value>true</value></bold><font-family><from>2</from><to>5</to><value>monospace</value></font-family><font-size><from>0</from><to>2</to><value>20</value></font-size><font-size><from>2</from><to>5</to><value>13</value></font-size><font-size><from>5</from><to>19</to><value>20</value></font-size><color><from>0</from><to>2</to><value>#666666</value></color><color><from>2</from><to>5</to><value>#ff502c</value></color><color><from>5</from><to>19</to><value>#666666</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>82-1580225598386</coId><text>然后你可以在你的代码编辑工具中打开这个项目，我这里使用的是VSCode，其实用什么无所谓，但是如果你是新手，还是建议你和我使用一样的编辑器，这样能保证和视频中的演示过程一样。按ctrl+~代开终端，然后进入demo01,在终端中用npm直接安装React Router.</text><inline-styles><font-family><from>29</from><to>35</to><value>monospace</value></font-family><font-family><from>88</from><to>94</to><value>monospace</value></font-family><font-family><from>103</from><to>109</to><value>monospace</value></font-family><font-family><from>115</from><to>118</to><value>monospace</value></font-family><font-family><from>122</from><to>134</to><value>monospace</value></font-family><font-size><from>0</from><to>29</to><value>16</value></font-size><font-size><from>29</from><to>35</to><value>13</value></font-size><font-size><from>35</from><to>88</to><value>16</value></font-size><font-size><from>88</from><to>94</to><value>13</value></font-size><font-size><from>94</from><to>103</to><value>16</value></font-size><font-size><from>103</from><to>109</to><value>13</value></font-size><font-size><from>109</from><to>115</to><value>16</value></font-size><font-size><from>115</from><to>118</to><value>13</value></font-size><font-size><from>118</from><to>122</to><value>16</value></font-size><font-size><from>122</from><to>134</to><value>13</value></font-size><font-size><from>134</from><to>135</to><value>16</value></font-size><color><from>0</from><to>29</to><value>#777777</value></color><color><from>29</from><to>35</to><value>#ff502c</value></color><color><from>35</from><to>88</to><value>#777777</value></color><color><from>88</from><to>94</to><value>#ff502c</value></color><color><from>94</from><to>103</to><value>#777777</value></color><color><from>103</from><to>109</to><value>#ff502c</value></color><color><from>109</from><to>115</to><value>#777777</value></color><color><from>115</from><to>118</to><value>#ff502c</value></color><color><from>118</from><to>122</to><value>#777777</value></color><color><from>122</from><to>134</to><value>#ff502c</value></color><color><from>134</from><to>135</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>9060-1580225904538</coId><text>npm install--save react-router-dom
</text><inline-styles><font-family><from>0</from><to>34</to><value>monospace</value></font-family><font-size><from>0</from><to>34</to><value>13</value></font-size><color><from>0</from><to>4</to><value>#cccccc</value></color><color><from>4</from><to>11</to><value>#f92672</value></color><color><from>11</from><to>34</to><value>#75715e</value></color></inline-styles><styles/><language>javascript</language><theme>default</theme></code><para><coId>28-1580225598389</coId><text>安装完成后可以到package.json里看一下安装的版本，我目前安装的是5.0.1,你学习的时候版本可能不一样，也许有些API不适用，你可以在入门后自己到官网查看API学习。</text><inline-styles><font-family><from>8</from><to>20</to><value>monospace</value></font-family><font-family><from>37</from><to>42</to><value>monospace</value></font-family><font-size><from>0</from><to>8</to><value>16</value></font-size><font-size><from>8</from><to>20</to><value>13</value></font-size><font-size><from>20</from><to>37</to><value>16</value></font-size><font-size><from>37</from><to>42</to><value>13</value></font-size><font-size><from>42</from><to>88</to><value>16</value></font-size><color><from>0</from><to>8</to><value>#777777</value></color><color><from>8</from><to>20</to><value>#ff502c</value></color><color><from>20</from><to>37</to><value>#777777</value></color><color><from>37</from><to>42</to><value>#ff502c</value></color><color><from>42</from><to>88</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>63-1580225598391</coId><text>编写一个最简单的路由程序</text><inline-styles><bold><from>0</from><to>12</to><value>true</value></bold><font-size><from>0</from><to>12</to><value>20</value></font-size><color><from>0</from><to>12</to><value>#666666</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>89-1580225598391</coId><text>首先我们改写src文件目录下的index.js代码。改为下面的代码,具体的意思在视频中讲解:</text><inline-styles><font-family><from>6</from><to>9</to><value>monospace</value></font-family><font-family><from>15</from><to>23</to><value>monospace</value></font-family><font-size><from>0</from><to>6</to><value>16</value></font-size><font-size><from>6</from><to>9</to><value>13</value></font-size><font-size><from>9</from><to>15</to><value>16</value></font-size><font-size><from>15</from><to>23</to><value>13</value></font-size><font-size><from>23</from><to>46</to><value>16</value></font-size><color><from>0</from><to>6</to><value>#777777</value></color><color><from>6</from><to>9</to><value>#ff502c</value></color><color><from>9</from><to>15</to><value>#777777</value></color><color><from>15</from><to>23</to><value>#ff502c</value></color><color><from>23</from><to>46</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>6115-1580225913984</coId><text>import React from'react';
import ReactDOM from'react-dom'
import AppRouter from'./AppRouter'

ReactDOM.render(&lt;AppRouter/&gt;,document.getElementById('root'))
</text><inline-styles><font-family><from>0</from><to>25</to><value>monospace</value></font-family><font-family><from>26</from><to>57</to><value>monospace</value></font-family><font-family><from>58</from><to>92</to><value>monospace</value></font-family><font-family><from>94</from><to>155</to><value>monospace</value></font-family><font-size><from>0</from><to>25</to><value>13</value></font-size><font-size><from>26</from><to>57</to><value>13</value></font-size><font-size><from>58</from><to>92</to><value>13</value></font-size><font-size><from>94</from><to>155</to><value>13</value></font-size><color><from>0</from><to>6</to><value>#f92672</value></color><color><from>6</from><to>13</to><value>#cccccc</value></color><color><from>13</from><to>17</to><value>#f92672</value></color><color><from>17</from><to>24</to><value>#e6db74</value></color><color><from>24</from><to>25</to><value>#cccccc</value></color><color><from>26</from><to>32</to><value>#f92672</value></color><color><from>32</from><to>42</to><value>#cccccc</value></color><color><from>42</from><to>46</to><value>#f92672</value></color><color><from>46</from><to>57</to><value>#e6db74</value></color><color><from>58</from><to>64</to><value>#f92672</value></color><color><from>64</from><to>75</to><value>#cccccc</value></color><color><from>75</from><to>79</to><value>#f92672</value></color><color><from>79</from><to>92</to><value>#e6db74</value></color><color><from>94</from><to>110</to><value>#cccccc</value></color><color><from>110</from><to>111</to><value>#f8f8f2</value></color><color><from>111</from><to>120</to><value>#f92672</value></color><color><from>120</from><to>122</to><value>#f8f8f2</value></color><color><from>122</from><to>123</to><value>#cccccc</value></color><color><from>123</from><to>131</to><value>#e6db74</value></color><color><from>131</from><to>147</to><value>#cccccc</value></color><color><from>147</from><to>153</to><value>#e6db74</value></color><color><from>153</from><to>155</to><value>#cccccc</value></color></inline-styles><styles/><language>javascript</language><theme>default</theme></code><para><coId>64-1580225598399</coId><text>现在的AppRouter组件是没有的，我们可以在src目录下建立一个AppRouter.js文件，然后写入下面的代码。</text><inline-styles><font-family><from>3</from><to>12</to><value>monospace</value></font-family><font-family><from>24</from><to>27</to><value>monospace</value></font-family><font-family><from>34</from><to>46</to><value>monospace</value></font-family><font-size><from>0</from><to>3</to><value>16</value></font-size><font-size><from>3</from><to>12</to><value>13</value></font-size><font-size><from>12</from><to>24</to><value>16</value></font-size><font-size><from>24</from><to>27</to><value>13</value></font-size><font-size><from>27</from><to>34</to><value>16</value></font-size><font-size><from>34</from><to>46</to><value>13</value></font-size><font-size><from>46</from><to>59</to><value>16</value></font-size><color><from>0</from><to>3</to><value>#777777</value></color><color><from>3</from><to>12</to><value>#ff502c</value></color><color><from>12</from><to>24</to><value>#777777</value></color><color><from>24</from><to>27</to><value>#ff502c</value></color><color><from>27</from><to>34</to><value>#777777</value></color><color><from>34</from><to>46</to><value>#ff502c</value></color><color><from>46</from><to>59</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>7058-1580229392313</coId><text>import React from "react";
import { BrowserRouter as Router, Route, Link } from "react-router-dom";

function Index() {  
    return&lt;h2&gt;JSPang.comh2&gt;;
    }
function List() {
    return&lt;h2&gt;List-Pageh2&gt;;
    }
function AppRouter() {  
    return (
        &lt;Router&gt;
            &lt;ul&gt;
                &lt;li&gt; &lt;Link to="/"&gt;首页&lt;/Link&gt; &lt;/li&gt;
                &lt;li&gt;&lt;Link to="/list/"&gt;列表&lt;/Link&gt; &lt;/li&gt;
            &lt;/ul&gt;
            &lt;Route path="/" exact component={Index} /&gt;
            &lt;Route path="/list/" component={List} /&gt;
        &lt;/Router&gt;
  );
}

</text><inline-styles><font-family><from>0</from><to>26</to><value>monospace</value></font-family><font-family><from>27</from><to>99</to><value>monospace</value></font-family><font-family><from>101</from><to>121</to><value>monospace</value></font-family><font-family><from>126</from><to>150</to><value>monospace</value></font-family><font-family><from>155</from><to>156</to><value>monospace</value></font-family><font-family><from>157</from><to>174</to><value>monospace</value></font-family><font-family><from>177</from><to>202</to><value>monospace</value></font-family><font-family><from>207</from><to>208</to><value>monospace</value></font-family><font-family><from>209</from><to>233</to><value>monospace</value></font-family><font-family><from>238</from><to>246</to><value>monospace</value></font-family><font-family><from>251</from><to>263</to><value>monospace</value></font-family><font-family><from>529</from><to>533</to><value>monospace</value></font-family><font-family><from>534</from><to>535</to><value>monospace</value></font-family><font-size><from>0</from><to>26</to><value>13</value></font-size><font-size><from>27</from><to>99</to><value>13</value></font-size><font-size><from>101</from><to>121</to><value>13</value></font-size><font-size><from>126</from><to>150</to><value>13</value></font-size><font-size><from>155</from><to>156</to><value>13</value></font-size><font-size><from>157</from><to>174</to><value>13</value></font-size><font-size><from>177</from><to>202</to><value>13</value></font-size><font-size><from>207</from><to>208</to><value>13</value></font-size><font-size><from>209</from><to>233</to><value>13</value></font-size><font-size><from>238</from><to>246</to><value>13</value></font-size><font-size><from>251</from><to>263</to><value>13</value></font-size><font-size><from>529</from><to>533</to><value>13</value></font-size><font-size><from>534</from><to>535</to><value>13</value></font-size><color><from>0</from><to>6</to><value>#f92672</value></color><color><from>6</from><to>18</to><value>#cccccc</value></color><color><from>18</from><to>25</to><value>#e6db74</value></color><color><from>25</from><to>26</to><value>#cccccc</value></color><color><from>27</from><to>33</to><value>#f92672</value></color><color><from>33</from><to>50</to><value>#cccccc</value></color><color><from>50</from><to>52</to><value>#f92672</value></color><color><from>52</from><to>80</to><value>#cccccc</value></color><color><from>80</from><to>98</to><value>#e6db74</value></color><color><from>98</from><to>99</to><value>#cccccc</value></color><color><from>101</from><to>109</to><value>#f92672</value></color><color><from>109</from><to>121</to><value>#cccccc</value></color><color><from>126</from><to>132</to><value>#f92672</value></color><color><from>132</from><to>133</to><value>#f8f8f2</value></color><color><from>133</from><to>135</to><value>#f92672</value></color><color><from>135</from><to>136</to><value>#f8f8f2</value></color><color><from>136</from><to>146</to><value>#cccccc</value></color><color><from>146</from><to>148</to><value>#f92672</value></color><color><from>148</from><to>149</to><value>#f8f8f2</value></color><color><from>149</from><to>150</to><value>#cccccc</value></color><color><from>155</from><to>156</to><value>#cccccc</value></color><color><from>157</from><to>165</to><value>#f92672</value></color><color><from>165</from><to>174</to><value>#cccccc</value></color><color><from>177</from><to>179</to><value>#cccccc</value></color><color><from>179</from><to>185</to><value>#f92672</value></color><color><from>185</from><to>186</to><value>#f8f8f2</value></color><color><from>186</from><to>188</to><value>#f92672</value></color><color><from>188</from><to>189</to><value>#f8f8f2</value></color><color><from>189</from><to>198</to><value>#cccccc</value></color><color><from>198</from><to>200</to><value>#f92672</value></color><color><from>200</from><to>201</to><value>#f8f8f2</value></color><color><from>201</from><to>202</to><value>#cccccc</value></color><color><from>207</from><to>208</to><value>#cccccc</value></color><color><from>209</from><to>217</to><value>#f92672</value></color><color><from>217</from><to>233</to><value>#cccccc</value></color><color><from>238</from><to>244</to><value>#f92672</value></color><color><from>244</from><to>246</to><value>#cccccc</value></color><color><from>251</from><to>255</to><value>#cccccc</value></color><color><from>255</from><to>256</to><value>#f8f8f2</value></color><color><from>256</from><to>262</to><value>#f92672</value></color><color><from>262</from><to>263</to><value>#f8f8f2</value></color><color><from>529</from><to>533</to><value>#cccccc</value></color><color><from>534</from><to>535</to><value>#cccccc</value></color></inline-styles><styles/><language>javascript</language><theme>default</theme></code><para><coId>11-1580225598416</coId><text/><inline-styles/><styles><font-size>16</font-size></styles></para><para><coId>27-1580225598417</coId><text>P02: 像制作普通网页一样使用ReactRouter</text><inline-styles><bold><from>0</from><to>27</to><value>true</value></bold><font-size><from>0</from><to>27</to><value>20</value></font-size><color><from>0</from><to>27</to><value>#333333</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>70-1580225598419</coId><text>编写Index组件</text><inline-styles><bold><from>0</from><to>9</to><value>true</value></bold><font-size><from>0</from><to>9</to><value>20</value></font-size><color><from>0</from><to>9</to><value>#666666</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>66-1580225598420</coId><text>先在/src 目录下建立一个文件夹，我这里起名叫做Pages，然后建立一个组件文件Index.js。这里边我们就完全安装工作中的模式来写，只是没有什么业务逻辑，UI也制作的相当加简单。代码如下：</text><inline-styles><font-family><from>2</from><to>7</to><value>monospace</value></font-family><font-family><from>25</from><to>30</to><value>monospace</value></font-family><font-family><from>41</from><to>49</to><value>monospace</value></font-family><font-size><from>0</from><to>2</to><value>16</value></font-size><font-size><from>2</from><to>7</to><value>13</value></font-size><font-size><from>7</from><to>25</to><value>16</value></font-size><font-size><from>25</from><to>30</to><value>13</value></font-size><font-size><from>30</from><to>41</to><value>16</value></font-size><font-size><from>41</from><to>49</to><value>13</value></font-size><font-size><from>49</from><to>97</to><value>16</value></font-size><color><from>0</from><to>2</to><value>#777777</value></color><color><from>2</from><to>7</to><value>#ff502c</value></color><color><from>7</from><to>25</to><value>#777777</value></color><color><from>25</from><to>30</to><value>#ff502c</value></color><color><from>30</from><to>41</to><value>#777777</value></color><color><from>41</from><to>49</to><value>#ff502c</value></color><color><from>49</from><to>97</to><value>#777777</value></color><back-color><from>2</from><to>7</to><value>#FAE220</value></back-color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>2578-1580229804249</coId><text>import React, { Component } from 'react';

class Index extends Component {
    constructor(props) {
        super(props);
        this.state = {  }
    }
    render() { 
        return (  &lt;h2&gt;JSPang.com&lt;/h2&gt; );
    }
}

export default Index;
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>08-1580225598425</coId><text/><inline-styles/><styles><font-size>16</font-size></styles></para><para><coId>59-1580225598427</coId><text>编写List组件</text><inline-styles><bold><from>0</from><to>8</to><value>true</value></bold><font-size><from>0</from><to>8</to><value>20</value></font-size><color><from>0</from><to>8</to><value>#666666</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>23-1580225598428</coId><text>编写完Index组件以后，继续编写List组件。其实这个组件和Index基本一样。代码如下:</text><inline-styles><font-family><from>3</from><to>8</to><value>monospace</value></font-family><font-family><from>17</from><to>21</to><value>monospace</value></font-family><font-family><from>31</from><to>36</to><value>monospace</value></font-family><font-size><from>0</from><to>3</to><value>16</value></font-size><font-size><from>3</from><to>8</to><value>13</value></font-size><font-size><from>8</from><to>17</to><value>16</value></font-size><font-size><from>17</from><to>21</to><value>13</value></font-size><font-size><from>21</from><to>31</to><value>16</value></font-size><font-size><from>31</from><to>36</to><value>13</value></font-size><font-size><from>36</from><to>46</to><value>16</value></font-size><color><from>0</from><to>3</to><value>#777777</value></color><color><from>3</from><to>8</to><value>#ff502c</value></color><color><from>8</from><to>17</to><value>#777777</value></color><color><from>17</from><to>21</to><value>#ff502c</value></color><color><from>21</from><to>31</to><value>#777777</value></color><color><from>31</from><to>36</to><value>#ff502c</value></color><color><from>36</from><to>46</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>9398-1580229832000</coId><text>import React, { Component } from 'react';

class List extends Component {
    constructor(props) {
        super(props);
        this.state = {  }
    }
    render() { 
        return (  &lt;h2&gt;List Page&lt;/h2&gt; );
    }
}

export default List;
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>73-1580225598436</coId><text>修改AppRouter.js文件</text><inline-styles><bold><from>0</from><to>16</to><value>true</value></bold><font-family><from>2</from><to>14</to><value>monospace</value></font-family><font-size><from>0</from><to>2</to><value>20</value></font-size><font-size><from>2</from><to>14</to><value>13</value></font-size><font-size><from>14</from><to>16</to><value>20</value></font-size><color><from>0</from><to>2</to><value>#666666</value></color><color><from>2</from><to>14</to><value>#ff502c</value></color><color><from>14</from><to>16</to><value>#666666</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>70-1580225598437</coId><text>两个组件制作完成后，我们把它引入路由配置文件，然后进行路由的配置就可以了，代码如下：</text><inline-styles><font-size><from>0</from><to>42</to><value>16</value></font-size><color><from>0</from><to>42</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>3163-1580230006993</coId><text>import React from "react";
import { BrowserRouter as Router, Route, Link } from "react-router-dom";
import Index from './Pages/Index'
import List from './Pages/List'

function AppRouter() {
  return (
    &lt;Router&gt;
        &lt;ul&gt;
            &lt;li&gt; &lt;Link to="/"&gt;首页&lt;/Link&gt; &lt;/li&gt;
            &lt;li&gt;&lt;Link to="/list/"&gt;列表&lt;/Link&gt; &lt;/li&gt;
        &lt;/ul&gt;
        &lt;Route path="/" exact component={Index} /&gt;
        &lt;Route path="/list/" component={List} /&gt;
    &lt;/Router&gt;
  );
}

export default AppRouter;
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>21-1580225598451</coId><text>现在看起来就和我们实际工作中差不多了，也和我们平时写的普通html页面很类似了。</text><inline-styles><font-family><from>29</from><to>33</to><value>monospace</value></font-family><font-size><from>0</from><to>29</to><value>16</value></font-size><font-size><from>29</from><to>33</to><value>13</value></font-size><font-size><from>33</from><to>40</to><value>16</value></font-size><color><from>0</from><to>29</to><value>#777777</value></color><color><from>29</from><to>33</to><value>#ff502c</value></color><color><from>33</from><to>40</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>80-1580225598452</coId><text>exact精准匹配的意思</text><inline-styles><bold><from>0</from><to>12</to><value>true</value></bold><font-family><from>0</from><to>5</to><value>monospace</value></font-family><font-size><from>0</from><to>5</to><value>13</value></font-size><font-size><from>5</from><to>12</to><value>20</value></font-size><color><from>0</from><to>5</to><value>#ff502c</value></color><color><from>5</from><to>12</to><value>#666666</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>58-1580225598452</coId><text>这个也是一个小伙伴问我的问题，精准匹配到底是什么？其实这个很好理解，从字面上就可以猜出结果，就是你的路径信息要完全匹配成功，才可以实现跳转，匹配一部分是不行的。</text><inline-styles><font-size><from>0</from><to>80</to><value>16</value></font-size><color><from>0</from><to>80</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>51-1580225598453</coId><text>比如我们把Index的精准匹配去掉，你会发现，无论你的地址栏输入什么都可以匹配到Index组件，这并不是我们想要的结果。</text><inline-styles><font-family><from>5</from><to>10</to><value>monospace</value></font-family><font-family><from>40</from><to>45</to><value>monospace</value></font-family><font-size><from>0</from><to>5</to><value>16</value></font-size><font-size><from>5</from><to>10</to><value>13</value></font-size><font-size><from>10</from><to>40</to><value>16</value></font-size><font-size><from>40</from><to>45</to><value>13</value></font-size><font-size><from>45</from><to>60</to><value>16</value></font-size><color><from>0</from><to>5</to><value>#777777</value></color><color><from>5</from><to>10</to><value>#ff502c</value></color><color><from>10</from><to>40</to><value>#777777</value></color><color><from>40</from><to>45</to><value>#ff502c</value></color><color><from>45</from><to>60</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>2226-1580230018224</coId><text>&lt;Routepath="/"component={Index} /&gt;
</text><inline-styles><font-family><from>0</from><to>34</to><value>monospace</value></font-family><font-size><from>0</from><to>34</to><value>13</value></font-size><color><from>0</from><to>1</to><value>#f8f8f2</value></color><color><from>1</from><to>10</to><value>#f92672</value></color><color><from>10</from><to>11</to><value>#f8f8f2</value></color><color><from>11</from><to>14</to><value>#e6db74</value></color><color><from>14</from><to>23</to><value>#f92672</value></color><color><from>23</from><to>24</to><value>#f8f8f2</value></color><color><from>24</from><to>31</to><value>#e6db74</value></color><color><from>31</from><to>34</to><value>#f8f8f2</value></color></inline-styles><styles/><language>html</language><theme>default</theme></code><para><coId>94-1580225598456</coId><text>所以我们加上了精准匹配exact。你可以再试着访问一下List组件，来更深入的了解一下精准匹配。</text><inline-styles><font-family><from>11</from><to>16</to><value>monospace</value></font-family><font-family><from>27</from><to>31</to><value>monospace</value></font-family><font-size><from>0</from><to>11</to><value>16</value></font-size><font-size><from>11</from><to>16</to><value>13</value></font-size><font-size><from>16</from><to>27</to><value>16</value></font-size><font-size><from>27</from><to>31</to><value>13</value></font-size><font-size><from>31</from><to>48</to><value>16</value></font-size><color><from>0</from><to>11</to><value>#777777</value></color><color><from>11</from><to>16</to><value>#ff502c</value></color><color><from>16</from><to>27</to><value>#777777</value></color><color><from>27</from><to>31</to><value>#ff502c</value></color><color><from>31</from><to>48</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>71-1580225598457</coId><text>P03: ReactRouter动态传值-1</text><inline-styles><bold><from>0</from><to>22</to><value>true</value></bold><font-size><from>0</from><to>22</to><value>20</value></font-size><color><from>0</from><to>22</to><value>#333333</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>56-1580225598458</coId><text>现在已经解决了链接跳转的问题，那现在想象这样一个场景，在一个很多文章的列表页面，然后点击任何一个链接，都可以准确的打开详细的文章内容，这就需要靠传递文章ID，然后后台准确检索文章内容最后呈现。这个过程每次传递到详细页面的ID值都是不一样的，所以就需要路由有动态传值的能力。</text><inline-styles><font-size><from>0</from><to>136</to><value>16</value></font-size><color><from>0</from><to>136</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>61-1580225598459</coId><text>在Route上设置允许动态传值</text><inline-styles><bold><from>0</from><to>15</to><value>true</value></bold><font-size><from>0</from><to>15</to><value>20</value></font-size><color><from>0</from><to>15</to><value>#666666</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>64-1580225598460</coId><text>这个设置是以:开始的，然后紧跟着你传递的key（键名称）名称。我们来看一个简单的例子。</text><inline-styles><font-family><from>6</from><to>7</to><value>monospace</value></font-family><font-size><from>0</from><to>6</to><value>16</value></font-size><font-size><from>6</from><to>7</to><value>13</value></font-size><font-size><from>7</from><to>43</to><value>16</value></font-size><color><from>0</from><to>6</to><value>#777777</value></color><color><from>6</from><to>7</to><value>#ff502c</value></color><color><from>7</from><to>43</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>9041-1580230065823</coId><text>&lt;Route path="/" component={Index} /&gt;
</text><inline-styles/><styles/><language>html</language><theme>default</theme></code><para><coId>61-1580225598463</coId><text>看过代码后，你会觉的很简单，就是在path上加:id。这样就设置了允许传值的规则。</text><inline-styles><font-family><from>17</from><to>21</to><value>monospace</value></font-family><font-family><from>23</from><to>26</to><value>monospace</value></font-family><font-size><from>0</from><to>17</to><value>16</value></font-size><font-size><from>17</from><to>21</to><value>13</value></font-size><font-size><from>21</from><to>23</to><value>16</value></font-size><font-size><from>23</from><to>26</to><value>13</value></font-size><font-size><from>26</from><to>41</to><value>16</value></font-size><color><from>0</from><to>17</to><value>#777777</value></color><color><from>17</from><to>21</to><value>#ff502c</value></color><color><from>21</from><to>23</to><value>#777777</value></color><color><from>23</from><to>26</to><value>#ff502c</value></color><color><from>26</from><to>41</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>14-1580225598463</coId><text>Link上传递值</text><inline-styles><bold><from>0</from><to>8</to><value>true</value></bold><font-size><from>0</from><to>8</to><value>20</value></font-size><color><from>0</from><to>8</to><value>#666666</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>39-1580225598464</coId><text>设置好规则后，就可以在Link上设置值了，现在设置传递的ID值了，这时候不用再添加id了，直接写值就可以了。</text><inline-styles><font-family><from>11</from><to>15</to><value>monospace</value></font-family><font-size><from>0</from><to>11</to><value>16</value></font-size><font-size><from>11</from><to>15</to><value>13</value></font-size><font-size><from>15</from><to>54</to><value>16</value></font-size><color><from>0</from><to>11</to><value>#777777</value></color><color><from>11</from><to>15</to><value>#ff502c</value></color><color><from>15</from><to>54</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>7378-1580230205840</coId><text> &lt;li&gt;&lt;Link to="/list/123"&gt;列表&lt;/Link&gt; &lt;/li&gt;
</text><inline-styles/><styles/><language>html</language><theme>default</theme></code><para><coId>32-1580225598467</coId><text>现在就可以进行传值了。为了方便你的学习，这里给出全部AppRouter.js代码。</text><inline-styles><font-family><from>26</from><to>38</to><value>monospace</value></font-family><font-size><from>0</from><to>26</to><value>16</value></font-size><font-size><from>26</from><to>38</to><value>13</value></font-size><font-size><from>38</from><to>41</to><value>16</value></font-size><color><from>0</from><to>26</to><value>#777777</value></color><color><from>26</from><to>38</to><value>#ff502c</value></color><color><from>38</from><to>41</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>4197-1580230254360</coId><text>import React from "react";
import { BrowserRouter as Router, Route, Link } from "react-router-dom";
import Index from './Pages/Index'
import List from './Pages/List'

function AppRouter() {
  return (
    &lt;Router&gt;
        &lt;ul&gt;
            &lt;li&gt; &lt;Link to="/"&gt;首页&lt;/Link&gt; &lt;/li&gt;
            &lt;li&gt;&lt;Link to="/list/123"&gt;列表&lt;/Link&gt; &lt;/li&gt;
        &lt;/ul&gt;
        &lt;Route path="/" exact component={Index} /&gt;
        &lt;Route path="/list/:id" component={List} /&gt;
    &lt;/Router&gt;
  );
}

export default AppRouter;
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>23-1580225598481</coId><text>在List组件上接收并显示传递值</text><inline-styles><bold><from>0</from><to>16</to><value>true</value></bold><font-size><from>0</from><to>16</to><value>20</value></font-size><color><from>0</from><to>16</to><value>#666666</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>56-1580225598482</coId><text>组件接收传递过来的值的时候，可以在声明周期componentDidMount中进行，传递的值在this.props.match中。我们可以先打印出来,代码如下。</text><inline-styles><font-family><from>21</from><to>38</to><value>monospace</value></font-family><font-family><from>47</from><to>63</to><value>monospace</value></font-family><font-size><from>0</from><to>21</to><value>16</value></font-size><font-size><from>21</from><to>38</to><value>13</value></font-size><font-size><from>38</from><to>47</to><value>16</value></font-size><font-size><from>47</from><to>63</to><value>13</value></font-size><font-size><from>63</from><to>80</to><value>16</value></font-size><color><from>0</from><to>21</to><value>#777777</value></color><color><from>21</from><to>38</to><value>#ff502c</value></color><color><from>38</from><to>47</to><value>#777777</value></color><color><from>47</from><to>63</to><value>#ff502c</value></color><color><from>63</from><to>80</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>9130-1580230353665</coId><text>import React, { Component } from 'react';

class List extends Component {
    constructor(props) {
        super(props);
        this.state = {  }
    }
    render() { 
        return (  &lt;h2&gt;List Page&lt;/h2&gt; );
    }
    //-关键代码---------start
    componentDidMount(){
        console.log(this.props.match)
    }
    //-关键艾玛---------end
}

export default List;
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>49-1580225598490</coId><text>然后在浏览器的控制台中可以看到打印出的对象，对象包括三个部分:</text><inline-styles><font-size><from>0</from><to>31</to><value>16</value></font-size><color><from>0</from><to>31</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><list-item level="1" list-id="69-1580225598490"><coId>02-1580225598491</coId><text>patch:自己定义的路由规则，可以清楚的看到是可以产地id参数的。</text><inline-styles><font-size><from>0</from><to>34</to><value>16</value></font-size><color><from>0</from><to>34</to><value>#777777</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="69-1580225598490"><coId>69-1580225598492</coId><text>url: 真实的访问路径，这上面可以清楚的看到传递过来的参数是什么。</text><inline-styles><font-size><from>0</from><to>34</to><value>16</value></font-size><color><from>0</from><to>34</to><value>#777777</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="69-1580225598490"><coId>75-1580225598493</coId><text>params：传递过来的参数，key和value值。</text><inline-styles><font-family><from>15</from><to>18</to><value>monospace</value></font-family><font-family><from>19</from><to>24</to><value>monospace</value></font-family><font-size><from>0</from><to>15</to><value>16</value></font-size><font-size><from>15</from><to>18</to><value>13</value></font-size><font-size><from>18</from><to>19</to><value>16</value></font-size><font-size><from>19</from><to>24</to><value>13</value></font-size><font-size><from>24</from><to>26</to><value>16</value></font-size><color><from>0</from><to>15</to><value>#777777</value></color><color><from>15</from><to>18</to><value>#ff502c</value></color><color><from>18</from><to>19</to><value>#777777</value></color><color><from>19</from><to>24</to><value>#ff502c</value></color><color><from>24</from><to>26</to><value>#777777</value></color></inline-styles><styles/></list-item><para><coId>13-1580225598494</coId><text>明白了match中的对象属性，就可以轻松取得传递过来的ID值了。代码如下:</text><inline-styles><font-size><from>0</from><to>37</to><value>16</value></font-size><color><from>0</from><to>37</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>8522-1580230361250</coId><text>import React, { Component } from 'react';

class List extends Component {
    constructor(props) {
        super(props);
        this.state = {  }
    }
    render() { 
        return (  &lt;h2&gt;List Page-&gt;{this.state.id}&lt;/h2&gt; );
    }
    componentDidMount(){
       // console.log(this.props.match.params.id)
       let tempId=this.props.match.params.id
        this.setState({id:tempId })
    }
}

export default List;
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>44-1580225598502</coId><text/><inline-styles/><styles><font-size>16</font-size></styles></para><para><coId>31-1580225598504</coId><text>P04: ReactRouter动态传值-2</text><inline-styles><bold><from>0</from><to>22</to><value>true</value></bold><font-size><from>0</from><to>22</to><value>20</value></font-size><color><from>0</from><to>22</to><value>#333333</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>8637-1580230391363</coId><text/><inline-styles/><styles/></para><para><coId>76-1580225598506</coId><text>模拟一个列表数组</text><inline-styles><bold><from>0</from><to>8</to><value>true</value></bold><font-size><from>0</from><to>8</to><value>20</value></font-size><color><from>0</from><to>8</to><value>#666666</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>74-1580225598507</coId><text>现在可以在Index组件里模拟一个列表数组，就相当于我们从后台动态获取到的内容，然后数组中包括文章的cid和title。直接在state初始化时进行设置，代码如下：</text><inline-styles><font-family><from>5</from><to>10</to><value>monospace</value></font-family><font-family><from>50</from><to>53</to><value>monospace</value></font-family><font-family><from>54</from><to>59</to><value>monospace</value></font-family><font-size><from>0</from><to>5</to><value>16</value></font-size><font-size><from>5</from><to>10</to><value>13</value></font-size><font-size><from>10</from><to>50</to><value>16</value></font-size><font-size><from>50</from><to>53</to><value>13</value></font-size><font-size><from>53</from><to>54</to><value>16</value></font-size><font-size><from>54</from><to>59</to><value>13</value></font-size><font-size><from>59</from><to>82</to><value>16</value></font-size><color><from>0</from><to>5</to><value>#777777</value></color><color><from>5</from><to>10</to><value>#ff502c</value></color><color><from>10</from><to>50</to><value>#777777</value></color><color><from>50</from><to>53</to><value>#ff502c</value></color><color><from>53</from><to>54</to><value>#777777</value></color><color><from>54</from><to>59</to><value>#ff502c</value></color><color><from>59</from><to>82</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>6760-1580230399784</coId><text> constructor(props) {
    super(props);
    this.state = { 
        list:[
            {cid:123,title:'技术胖的个人博客-1'},
            {cid:456,title:'技术胖的个人博客-2'},
            {cid:789,title:'技术胖的个人博客-3'},
        ]
    }
}
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>03-1580225598510</coId><text/><inline-styles/><styles><font-size>16</font-size></styles></para><para><coId>40-1580225598512</coId><text>有了list数组后，再修改一下UI，进行有效的遍历，Render代码如下。</text><inline-styles><font-family><from>2</from><to>6</to><value>monospace</value></font-family><font-family><from>26</from><to>32</to><value>monospace</value></font-family><font-size><from>0</from><to>2</to><value>16</value></font-size><font-size><from>2</from><to>6</to><value>13</value></font-size><font-size><from>6</from><to>26</to><value>16</value></font-size><font-size><from>26</from><to>32</to><value>13</value></font-size><font-size><from>32</from><to>37</to><value>16</value></font-size><color><from>0</from><to>2</to><value>#777777</value></color><color><from>2</from><to>6</to><value>#ff502c</value></color><color><from>6</from><to>26</to><value>#777777</value></color><color><from>26</from><to>32</to><value>#ff502c</value></color><color><from>32</from><to>37</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>8661-1580230521416</coId><text> render() { 
    return ( 
        &lt;ul&gt;
            {
                this.state.list.map((item,index)=&gt;{
                    return (
                        &lt;li key={index}&gt; {item.title} &lt;/li&gt;
                    )
                })
            }
        &lt;/ul&gt;
    )
}
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>71-1580225598520</coId><text>列表已经可以在Index组件里显示出来了，接下来可以配置了,在配置之前，你需要先引入Link组件。</text><inline-styles><font-family><from>7</from><to>12</to><value>monospace</value></font-family><font-family><from>42</from><to>46</to><value>monospace</value></font-family><font-size><from>0</from><to>7</to><value>16</value></font-size><font-size><from>7</from><to>12</to><value>13</value></font-size><font-size><from>12</from><to>42</to><value>16</value></font-size><font-size><from>42</from><to>46</to><value>13</value></font-size><font-size><from>46</from><to>49</to><value>16</value></font-size><color><from>0</from><to>7</to><value>#777777</value></color><color><from>7</from><to>12</to><value>#ff502c</value></color><color><from>12</from><to>42</to><value>#777777</value></color><color><from>42</from><to>46</to><value>#ff502c</value></color><color><from>46</from><to>49</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>4532-1580230551711</coId><text>import { Link } from"react-router-dom";
</text><inline-styles><font-family><from>0</from><to>39</to><value>monospace</value></font-family><font-size><from>0</from><to>39</to><value>13</value></font-size><color><from>0</from><to>6</to><value>#f92672</value></color><color><from>6</from><to>16</to><value>#cccccc</value></color><color><from>16</from><to>20</to><value>#f92672</value></color><color><from>20</from><to>38</to><value>#e6db74</value></color><color><from>38</from><to>39</to><value>#cccccc</value></color></inline-styles><styles/><language>javascript</language><theme>default</theme></code><para><coId>58-1580225598522</coId><text>引入后直接使用进行跳转就可以，但是需要注意一点，要用{}的形式，也就是把to里边的内容解析成JS的形式，这样才能顺利的传值过去。</text><inline-styles><font-family><from>26</from><to>28</to><value>monospace</value></font-family><font-family><from>36</from><to>38</to><value>monospace</value></font-family><font-size><from>0</from><to>26</to><value>16</value></font-size><font-size><from>26</from><to>28</to><value>13</value></font-size><font-size><from>28</from><to>36</to><value>16</value></font-size><font-size><from>36</from><to>38</to><value>13</value></font-size><font-size><from>38</from><to>64</to><value>16</value></font-size><color><from>0</from><to>26</to><value>#777777</value></color><color><from>26</from><to>28</to><value>#ff502c</value></color><color><from>28</from><to>36</to><value>#777777</value></color><color><from>36</from><to>38</to><value>#ff502c</value></color><color><from>38</from><to>64</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>7224-1580230572519</coId><text>render() { 
    return ( 
        &lt;ul&gt;
            {
                this.state.list.map((item,index)=&gt;{
                    return (
                        &lt;li key={index}&gt;
                            &lt;Link to={'/list/'+item.uid}&gt; {item.title}&lt;/Link&gt; 
                        &lt;/li&gt;
                    )
                })
            }
        &lt;/ul&gt;
    )
}
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>12-1580225598531</coId><text>到目前为止，已经很类似我们项目中的列表向详细页进行传值了。为了方便你学习，给出Index.js的所有代码.</text><inline-styles><font-family><from>39</from><to>47</to><value>monospace</value></font-family><font-size><from>0</from><to>39</to><value>16</value></font-size><font-size><from>39</from><to>47</to><value>13</value></font-size><font-size><from>47</from><to>53</to><value>16</value></font-size><color><from>0</from><to>39</to><value>#777777</value></color><color><from>39</from><to>47</to><value>#ff502c</value></color><color><from>47</from><to>53</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>4730-1580230659059</coId><text>import React, { Component } from 'react';
import { Link } from "react-router-dom";

class Index extends Component {
    constructor(props) {
        super(props);
        this.state = { 
            list:[
                {uid:123,title:'技术胖的个人博客-1'},
                {uid:456,title:'技术胖的个人博客-2'},
                {uid:789,title:'技术胖的个人博客-3'},
            ]
         }
    }
    render() { 
        return ( 
            &lt;ul&gt;
                {
                    this.state.list.map((item,index)=&gt;{
                        return (
                            &lt;li key={index}&gt;
                               &lt;Link to={'/list/'+item.uid}&gt; {item.title}&lt;/Link&gt; 
                            &lt;/li&gt;
                        )
                    })
                }
            &lt;/ul&gt;
        )
    }
}

export default Index;
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>41-1580225598551</coId><text>通过四小节的学习，你一定对React Router有了基本的了解，接下来的学习会稍微提升一点难度，所以你先要把这四小节课学好，练好.再向下进行。</text><inline-styles><font-family><from>13</from><to>25</to><value>monospace</value></font-family><font-size><from>0</from><to>13</to><value>16</value></font-size><font-size><from>13</from><to>25</to><value>13</value></font-size><font-size><from>25</from><to>72</to><value>16</value></font-size><color><from>0</from><to>13</to><value>#777777</value></color><color><from>13</from><to>25</to><value>#ff502c</value></color><color><from>25</from><to>72</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>90-1580225598552</coId><text>P05: ReactRouter重定向-Redirect使用</text><inline-styles><bold><from>0</from><to>30</to><value>true</value></bold><font-size><from>0</from><to>30</to><value>20</value></font-size><color><from>0</from><to>30</to><value>#333333</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>03-1580225598552</coId><text>在写这篇文章的时候哦，我看了一些相关的React Router Redirect的文章，讲的都是很繁琐，其实我认为写一篇入门文章并不是秀技术，而是让别人能看到，能做出来，并且以后可以自己深入。如果能作到这三点就算是一篇不错的文章。我认为Redirect(重定向)，你就掌握基本的两个知识点就可以了。</text><inline-styles><font-family><from>19</from><to>40</to><value>monospace</value></font-family><font-family><from>118</from><to>126</to><value>monospace</value></font-family><font-size><from>0</from><to>19</to><value>16</value></font-size><font-size><from>19</from><to>40</to><value>13</value></font-size><font-size><from>40</from><to>118</to><value>16</value></font-size><font-size><from>118</from><to>126</to><value>13</value></font-size><font-size><from>126</from><to>149</to><value>16</value></font-size><color><from>0</from><to>19</to><value>#777777</value></color><color><from>19</from><to>40</to><value>#ff502c</value></color><color><from>40</from><to>118</to><value>#777777</value></color><color><from>118</from><to>126</to><value>#ff502c</value></color><color><from>126</from><to>149</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><list-item level="1" list-id="15-1580225598554"><coId>36-1580225598555</coId><text>标签式重定向:就是利用标签来进行重定向，业务逻辑不复杂时建议使用这种。</text><inline-styles><font-size><from>0</from><to>35</to><value>16</value></font-size><color><from>0</from><to>35</to><value>#777777</value></color></inline-styles><styles/></list-item><list-item level="1" list-id="15-1580225598554"><coId>19-1580225598555</coId><text>编程式重定向:这种是利用编程的方式，一般用于业务逻辑当中，比如登录成功挑战到会员中心页面。</text><inline-styles><font-size><from>0</from><to>45</to><value>16</value></font-size><color><from>0</from><to>45</to><value>#777777</value></color></inline-styles><styles/></list-item><para><coId>56-1580225598557</coId><text>重定向和跳转有一个重要的区别，就是跳转式可以用浏览器的回退按钮返回上一级的，而重定向是不可以的。</text><inline-styles><font-size><from>0</from><to>48</to><value>16</value></font-size><color><from>0</from><to>48</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>09-1580225598558</coId><text>标签式重定向</text><inline-styles><bold><from>0</from><to>6</to><value>true</value></bold><font-size><from>0</from><to>6</to><value>20</value></font-size><color><from>0</from><to>6</to><value>#666666</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>78-1580225598558</coId><text>这个一般用在不是很复杂的业务逻辑中，比如我们进入Index组件，然后Index组件,直接重定向到Home组件。我们也结合这个场景，看一下如何实现。</text><inline-styles><font-family><from>24</from><to>29</to><value>monospace</value></font-family><font-family><from>34</from><to>39</to><value>monospace</value></font-family><font-family><from>48</from><to>52</to><value>monospace</value></font-family><font-size><from>0</from><to>24</to><value>16</value></font-size><font-size><from>24</from><to>29</to><value>13</value></font-size><font-size><from>29</from><to>34</to><value>16</value></font-size><font-size><from>34</from><to>39</to><value>13</value></font-size><font-size><from>39</from><to>48</to><value>16</value></font-size><font-size><from>48</from><to>52</to><value>13</value></font-size><font-size><from>52</from><to>73</to><value>16</value></font-size><color><from>0</from><to>24</to><value>#777777</value></color><color><from>24</from><to>29</to><value>#ff502c</value></color><color><from>29</from><to>34</to><value>#777777</value></color><color><from>34</from><to>39</to><value>#ff502c</value></color><color><from>39</from><to>48</to><value>#777777</value></color><color><from>48</from><to>52</to><value>#ff502c</value></color><color><from>52</from><to>73</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>16-1580225598559</coId><text>首先建立一个Home.js的页面，这个页面我还是用快速生成的方式来进行编写，代码如下。</text><inline-styles><font-family><from>6</from><to>13</to><value>monospace</value></font-family><font-size><from>0</from><to>6</to><value>16</value></font-size><font-size><from>6</from><to>13</to><value>13</value></font-size><font-size><from>13</from><to>43</to><value>16</value></font-size><color><from>0</from><to>6</to><value>#777777</value></color><color><from>6</from><to>13</to><value>#ff502c</value></color><color><from>13</from><to>43</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>2019-1580231040911</coId><text>import React, { Component } from 'react';

class Home extends Component {
    constructor(props) {
        super(props);
        this.state = {  }
    }
    render() { 
        return (  &lt;h2&gt;我是 Home 页面&lt;/h2&gt; );
    }
}

export default Home;
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>04-1580225598567</coId><text>这个页面非常简单，就是一个普通的有状态组件。</text><inline-styles><font-size><from>0</from><to>22</to><value>16</value></font-size><color><from>0</from><to>22</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>50-1580225598568</coId><text>有了组件后可以配置一下路由规则，也就是在AppRouter.js里加一个配置，配置时记得引入Home组件。</text><inline-styles><font-family><from>20</from><to>32</to><value>monospace</value></font-family><font-family><from>46</from><to>50</to><value>monospace</value></font-family><font-size><from>0</from><to>20</to><value>16</value></font-size><font-size><from>20</from><to>32</to><value>13</value></font-size><font-size><from>32</from><to>46</to><value>16</value></font-size><font-size><from>46</from><to>50</to><value>13</value></font-size><font-size><from>50</from><to>53</to><value>16</value></font-size><color><from>0</from><to>20</to><value>#777777</value></color><color><from>20</from><to>32</to><value>#ff502c</value></color><color><from>32</from><to>46</to><value>#777777</value></color><color><from>46</from><to>50</to><value>#ff502c</value></color><color><from>50</from><to>53</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>9715-1580231051583</coId><text>import Home from './Pages/Home'
&lt;Route path="/home/" component={Home} /&gt;
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>97-1580225598571</coId><text>之后打开Index.js文件，从Index组件重新定向到Home组件，需要先引入Redirect。</text><inline-styles><font-family><from>4</from><to>12</to><value>monospace</value></font-family><font-family><from>16</from><to>21</to><value>monospace</value></font-family><font-family><from>28</from><to>32</to><value>monospace</value></font-family><font-family><from>40</from><to>48</to><value>monospace</value></font-family><font-size><from>0</from><to>4</to><value>16</value></font-size><font-size><from>4</from><to>12</to><value>13</value></font-size><font-size><from>12</from><to>16</to><value>16</value></font-size><font-size><from>16</from><to>21</to><value>13</value></font-size><font-size><from>21</from><to>28</to><value>16</value></font-size><font-size><from>28</from><to>32</to><value>13</value></font-size><font-size><from>32</from><to>40</to><value>16</value></font-size><font-size><from>40</from><to>48</to><value>13</value></font-size><font-size><from>48</from><to>49</to><value>16</value></font-size><color><from>0</from><to>4</to><value>#777777</value></color><color><from>4</from><to>12</to><value>#ff502c</value></color><color><from>12</from><to>16</to><value>#777777</value></color><color><from>16</from><to>21</to><value>#ff502c</value></color><color><from>21</from><to>28</to><value>#777777</value></color><color><from>28</from><to>32</to><value>#ff502c</value></color><color><from>32</from><to>40</to><value>#777777</value></color><color><from>40</from><to>48</to><value>#ff502c</value></color><color><from>48</from><to>49</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>3189-1580231056126</coId><text>import { Link , Redirect } from"react-router-dom";
</text><inline-styles><font-family><from>0</from><to>50</to><value>monospace</value></font-family><font-size><from>0</from><to>50</to><value>13</value></font-size><color><from>0</from><to>9</to><value>#cccccc</value></color><color><from>9</from><to>13</to><value>#75715e</value></color><color><from>13</from><to>16</to><value>#cccccc</value></color><color><from>16</from><to>24</to><value>#75715e</value></color><color><from>24</from><to>27</to><value>#cccccc</value></color><color><from>27</from><to>31</to><value>#75715e</value></color><color><from>31</from><to>49</to><value>#e6db74</value></color><color><from>49</from><to>50</to><value>#cccccc</value></color></inline-styles><styles/><language>javascript</language><theme>default</theme></code><para><coId>30-1580225598574</coId><text>引入Redirect后，直接在render函数里使用就可以了。</text><inline-styles><font-family><from>2</from><to>10</to><value>monospace</value></font-family><font-family><from>15</from><to>21</to><value>monospace</value></font-family><font-size><from>0</from><to>2</to><value>16</value></font-size><font-size><from>2</from><to>10</to><value>13</value></font-size><font-size><from>10</from><to>15</to><value>16</value></font-size><font-size><from>15</from><to>21</to><value>13</value></font-size><font-size><from>21</from><to>31</to><value>16</value></font-size><color><from>0</from><to>2</to><value>#777777</value></color><color><from>2</from><to>10</to><value>#ff502c</value></color><color><from>10</from><to>15</to><value>#777777</value></color><color><from>15</from><to>21</to><value>#ff502c</value></color><color><from>21</from><to>31</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>1814-1580231069750</coId><text> &lt;Redirect to="/home/" /&gt;
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>46-1580225598576</coId><text>现在就可以实现页面的重定向。</text><inline-styles><font-size><from>0</from><to>14</to><value>16</value></font-size><color><from>0</from><to>14</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>19-1580225598576</coId><text>编程式重定向</text><inline-styles><bold><from>0</from><to>6</to><value>true</value></bold><font-size><from>0</from><to>6</to><value>20</value></font-size><color><from>0</from><to>6</to><value>#666666</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>04-1580225598577</coId><text>编程式重定向就是不再利用标签，而是直接使用JS的语法实现重定向。他一般用在业务逻辑比较发杂的场合或者需要多次判断的场合。我们这里就不模拟复杂场景了，还是利用上边的例子实现一下，让大家看到结果就好。</text><inline-styles><font-family><from>21</from><to>23</to><value>monospace</value></font-family><font-size><from>0</from><to>21</to><value>16</value></font-size><font-size><from>21</from><to>23</to><value>13</value></font-size><font-size><from>23</from><to>98</to><value>16</value></font-size><color><from>0</from><to>21</to><value>#777777</value></color><color><from>21</from><to>23</to><value>#ff502c</value></color><color><from>23</from><to>98</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>65-1580225598578</coId><text>比如直接在构造函数constructor中加入下面的重定向代码。</text><inline-styles><font-family><from>9</from><to>20</to><value>monospace</value></font-family><font-size><from>0</from><to>9</to><value>16</value></font-size><font-size><from>9</from><to>20</to><value>13</value></font-size><font-size><from>20</from><to>32</to><value>16</value></font-size><color><from>0</from><to>9</to><value>#777777</value></color><color><from>9</from><to>20</to><value>#ff502c</value></color><color><from>20</from><to>32</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>5715-1580231103214</coId><text>this.props.history.push("/home/");  
</text><inline-styles><font-family><from>0</from><to>36</to><value>monospace</value></font-family><font-size><from>0</from><to>36</to><value>13</value></font-size><color><from>0</from><to>4</to><value>#f92672</value></color><color><from>4</from><to>19</to><value>#cccccc</value></color><color><from>19</from><to>23</to><value>#f92672</value></color><color><from>23</from><to>24</to><value>#cccccc</value></color><color><from>24</from><to>32</to><value>#e6db74</value></color><color><from>32</from><to>36</to><value>#cccccc</value></color></inline-styles><styles/><language>javascript</language><theme>default</theme></code><para><coId>18-1580225598580</coId><text>就可以顺利实现跳转，这样看起来和上面的过程是一样的。这两种方式的重定向你可以根据真实需求使用，这样能让你的程序更加的灵活。课后你可以试着模拟用户的登录过程试着用一下这样的跳转。</text><inline-styles><font-size><from>0</from><to>88</to><value>16</value></font-size><color><from>0</from><to>88</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>26-1580225598581</coId><text>P06: 实例-ReactRouter嵌套路由-1</text><inline-styles><bold><from>0</from><to>25</to><value>true</value></bold><font-size><from>0</from><to>25</to><value>20</value></font-size><color><from>0</from><to>25</to><value>#333333</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>96-1580225598582</coId><text>嵌套路由，这种路由形式在互联网上也是比较常见的。比如我们后台的管理系统，大部分是用嵌套路由，来实现页面的总体划分。当然前端页面也是会有很多嵌套路由的实现，比如我们经常看的掘金网站，里边多是嵌套路由（比如说掘金里的沸点）。</text><inline-styles><font-size><from>0</from><to>110</to><value>16</value></font-size><color><from>0</from><to>110</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>30-1580225598585</coId><text>用脚手架创建项目</text><inline-styles><bold><from>0</from><to>8</to><value>true</value></bold><font-size><from>0</from><to>8</to><value>20</value></font-size><color><from>0</from><to>8</to><value>#666666</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>95-1580225598585</coId><text>重新创建一个项目Demo02,直接在VSCode里输入，下面的命令初始化项目代码。</text><inline-styles><font-family><from>8</from><to>14</to><value>monospace</value></font-family><font-size><from>0</from><to>8</to><value>16</value></font-size><font-size><from>8</from><to>14</to><value>13</value></font-size><font-size><from>14</from><to>41</to><value>16</value></font-size><color><from>0</from><to>8</to><value>#777777</value></color><color><from>8</from><to>14</to><value>#ff502c</value></color><color><from>14</from><to>41</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>55-1580225598586</coId><text>create-react-appdemo02</text><inline-styles><font-family><from>0</from><to>22</to><value>monospace</value></font-family><font-size><from>0</from><to>22</to><value>13</value></font-size><color><from>0</from><to>22</to><value>#e6db74</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>22-1580225598587</coId><text>这样项目就创建好了，但是里边有很多暂时不需要的文件，删除这些，让代码结构保持最小化。只留/src目录里的index.js文件，然后再删除一些index.js文件里无用的代码。</text><inline-styles><font-family><from>44</from><to>48</to><value>monospace</value></font-family><font-family><from>52</from><to>60</to><value>monospace</value></font-family><font-family><from>70</from><to>78</to><value>monospace</value></font-family><font-size><from>0</from><to>44</to><value>16</value></font-size><font-size><from>44</from><to>48</to><value>13</value></font-size><font-size><from>48</from><to>52</to><value>16</value></font-size><font-size><from>52</from><to>60</to><value>13</value></font-size><font-size><from>60</from><to>70</to><value>16</value></font-size><font-size><from>70</from><to>78</to><value>13</value></font-size><font-size><from>78</from><to>87</to><value>16</value></font-size><color><from>0</from><to>44</to><value>#777777</value></color><color><from>44</from><to>48</to><value>#ff502c</value></color><color><from>48</from><to>52</to><value>#777777</value></color><color><from>52</from><to>60</to><value>#ff502c</value></color><color><from>60</from><to>70</to><value>#777777</value></color><color><from>70</from><to>78</to><value>#ff502c</value></color><color><from>78</from><to>87</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>73-1580225598589</coId><text>项目初始化好以后，再在安装React Router,使用npm来进行安装</text><inline-styles><font-family><from>13</from><to>25</to><value>monospace</value></font-family><font-family><from>28</from><to>31</to><value>monospace</value></font-family><font-size><from>0</from><to>13</to><value>16</value></font-size><font-size><from>13</from><to>25</to><value>13</value></font-size><font-size><from>25</from><to>28</to><value>16</value></font-size><font-size><from>28</from><to>31</to><value>13</value></font-size><font-size><from>31</from><to>36</to><value>16</value></font-size><color><from>0</from><to>13</to><value>#777777</value></color><color><from>13</from><to>25</to><value>#ff502c</value></color><color><from>25</from><to>28</to><value>#777777</value></color><color><from>28</from><to>31</to><value>#ff502c</value></color><color><from>31</from><to>36</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>3639-1580231841421</coId><text>npm install--save react-router-dom
</text><inline-styles><font-family><from>0</from><to>34</to><value>monospace</value></font-family><font-size><from>0</from><to>34</to><value>13</value></font-size><color><from>0</from><to>4</to><value>#cccccc</value></color><color><from>4</from><to>11</to><value>#f92672</value></color><color><from>11</from><to>34</to><value>#75715e</value></color></inline-styles><styles/><language>javascript</language><theme>default</theme></code><para><coId>87-1580225598591</coId><text>初始化基本目录</text><inline-styles><bold><from>0</from><to>7</to><value>true</value></bold><font-size><from>0</from><to>7</to><value>20</value></font-size><color><from>0</from><to>7</to><value>#666666</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>29-1580225598593</coId><text>根据草图分析，可以指导有两层关系，第一层是大类，第二层是子类别。先再/src目录下建立一个Pages的文件夹。然后在/Pages目录下再建立两个目录/video和/workPlace,然后在/src目录下建立一个AppRouter.js文件作为首页和路由的配置文件。目录结构如下所示:</text><inline-styles><font-family><from>34</from><to>38</to><value>monospace</value></font-family><font-family><from>45</from><to>50</to><value>monospace</value></font-family><font-family><from>58</from><to>64</to><value>monospace</value></font-family><font-family><from>74</from><to>80</to><value>monospace</value></font-family><font-family><from>81</from><to>91</to><value>monospace</value></font-family><font-family><from>95</from><to>99</to><value>monospace</value></font-family><font-family><from>106</from><to>118</to><value>monospace</value></font-family><font-size><from>0</from><to>34</to><value>16</value></font-size><font-size><from>34</from><to>38</to><value>13</value></font-size><font-size><from>38</from><to>45</to><value>16</value></font-size><font-size><from>45</from><to>50</to><value>13</value></font-size><font-size><from>50</from><to>58</to><value>16</value></font-size><font-size><from>58</from><to>64</to><value>13</value></font-size><font-size><from>64</from><to>74</to><value>16</value></font-size><font-size><from>74</from><to>80</to><value>13</value></font-size><font-size><from>80</from><to>81</to><value>16</value></font-size><font-size><from>81</from><to>91</to><value>13</value></font-size><font-size><from>91</from><to>95</to><value>16</value></font-size><font-size><from>95</from><to>99</to><value>13</value></font-size><font-size><from>99</from><to>106</to><value>16</value></font-size><font-size><from>106</from><to>118</to><value>13</value></font-size><font-size><from>118</from><to>142</to><value>16</value></font-size><color><from>0</from><to>34</to><value>#777777</value></color><color><from>34</from><to>38</to><value>#ff502c</value></color><color><from>38</from><to>45</to><value>#777777</value></color><color><from>45</from><to>50</to><value>#ff502c</value></color><color><from>50</from><to>58</to><value>#777777</value></color><color><from>58</from><to>64</to><value>#ff502c</value></color><color><from>64</from><to>74</to><value>#777777</value></color><color><from>74</from><to>80</to><value>#ff502c</value></color><color><from>80</from><to>81</to><value>#777777</value></color><color><from>81</from><to>91</to><value>#ff502c</value></color><color><from>91</from><to>95</to><value>#777777</value></color><color><from>95</from><to>99</to><value>#ff502c</value></color><color><from>99</from><to>106</to><value>#777777</value></color><color><from>106</from><to>118</to><value>#ff502c</value></color><color><from>118</from><to>142</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>6423-1580231856576</coId><text>- src
|--Pages
   |--video
   |--workPlace
|--index.js
|--AppRouter.js
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>89-1580225598597</coId><text>建立完成后，我们先编写AppRouter.js,为的是让程序拥有首页，并让程序可以跑起来。文件新建以后可以用快速生成代码的方式，把基本代码做完。</text><inline-styles><font-family><from>11</from><to>23</to><value>monospace</value></font-family><font-size><from>0</from><to>11</to><value>16</value></font-size><font-size><from>11</from><to>23</to><value>13</value></font-size><font-size><from>23</from><to>72</to><value>16</value></font-size><color><from>0</from><to>11</to><value>#777777</value></color><color><from>11</from><to>23</to><value>#ff502c</value></color><color><from>23</from><to>72</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>2134-1580231897247</coId><text>import React from "react";
import { BrowserRouter as Router, Route, Link  } from "react-router-dom";
import Index from './Pages/Index'
import './index.css'

function AppRouter() {
    return (
      &lt;Router&gt;
          &lt;div className="mainDiv"&gt;
            &lt;div className="leftNav"&gt;
                &lt;h3&gt;一级导航&lt;/h3&gt;
                &lt;ul&gt;
                    &lt;li&gt; &lt;Link to="/"&gt;博客首页&lt;/Link&gt; &lt;/li&gt;
                    &lt;li&gt;&lt;Link to=""&gt;视频教程&lt;/Link&gt; &lt;/li&gt;
                    &lt;li&gt;&lt;Link to=""&gt;职场技能&lt;/Link&gt; &lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;

            &lt;div className="rightMain"&gt;
                &lt;Route path="/"  exact component={Index} /&gt;
            &lt;/div&gt;
          &lt;/div&gt;
      &lt;/Router&gt;
    );
  }

  export default AppRouter;
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>71-1580225598622</coId><text>写完这个文件，然后修改一下/src/index.js文件，需要引入AppRouter，并进行Render渲染。</text><inline-styles><font-family><from>13</from><to>26</to><value>monospace</value></font-family><font-family><from>33</from><to>42</to><value>monospace</value></font-family><font-family><from>46</from><to>52</to><value>monospace</value></font-family><font-size><from>0</from><to>13</to><value>16</value></font-size><font-size><from>13</from><to>26</to><value>13</value></font-size><font-size><from>26</from><to>33</to><value>16</value></font-size><font-size><from>33</from><to>42</to><value>13</value></font-size><font-size><from>42</from><to>46</to><value>16</value></font-size><font-size><from>46</from><to>52</to><value>13</value></font-size><font-size><from>52</from><to>55</to><value>16</value></font-size><color><from>0</from><to>13</to><value>#777777</value></color><color><from>13</from><to>26</to><value>#ff502c</value></color><color><from>26</from><to>33</to><value>#777777</value></color><color><from>33</from><to>42</to><value>#ff502c</value></color><color><from>42</from><to>46</to><value>#777777</value></color><color><from>46</from><to>52</to><value>#ff502c</value></color><color><from>52</from><to>55</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>5570-1580232114876</coId><text>import React from 'react'
import ReactDOM from 'react-dom'
import AppRouter from './AppRouter'


ReactDOM.render(&lt;AppRouter /&gt;, document.getElementById('root'));
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>78-1580225598627</coId><text>这时候就可以在终端里输入npm start让程序跑起来，然后去浏览器中进行查看了。</text><inline-styles><font-family><from>12</from><to>21</to><value>monospace</value></font-family><font-size><from>0</from><to>12</to><value>16</value></font-size><font-size><from>12</from><to>21</to><value>13</value></font-size><font-size><from>21</from><to>41</to><value>16</value></font-size><color><from>0</from><to>12</to><value>#777777</value></color><color><from>12</from><to>21</to><value>#ff502c</value></color><color><from>21</from><to>41</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>61-1580225598640</coId><text>P07: 实例-ReactRouter嵌套路由-2</text><inline-styles><bold><from>0</from><to>25</to><value>true</value></bold><font-size><from>0</from><to>25</to><value>20</value></font-size><color><from>0</from><to>25</to><value>#333333</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>04-1580225598640</coId><text>这节课我们就将最主要的知识点，嵌套路由。接着上节课我们继续添加我们的程序，把视频部分的嵌套路由制作完成。嵌套路由简单理解就是在子页面中再设置一层新的路由导航规则。</text><inline-styles><font-size><from>0</from><to>81</to><value>16</value></font-size><color><from>0</from><to>81</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>18-1580225598641</coId><text>编写Video中的子页面</text><inline-styles><bold><from>0</from><to>12</to><value>true</value></bold><font-family><from>2</from><to>7</to><value>monospace</value></font-family><font-size><from>0</from><to>2</to><value>20</value></font-size><font-size><from>2</from><to>7</to><value>13</value></font-size><font-size><from>7</from><to>12</to><value>20</value></font-size><color><from>0</from><to>2</to><value>#666666</value></color><color><from>2</from><to>7</to><value>#ff502c</value></color><color><from>7</from><to>12</to><value>#666666</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>05-1580225598643</coId><text>在编写Video.js页面之前，我们需要在/src/Pages/video下面建立三个子文件，分别是ReactPage.js,Flutter.js和Vue.js，也代表着不同的视频页面。</text><inline-styles><font-family><from>3</from><to>11</to><value>monospace</value></font-family><font-family><from>21</from><to>37</to><value>monospace</value></font-family><font-family><from>50</from><to>62</to><value>monospace</value></font-family><font-family><from>63</from><to>73</to><value>monospace</value></font-family><font-family><from>74</from><to>80</to><value>monospace</value></font-family><font-size><from>0</from><to>3</to><value>16</value></font-size><font-size><from>3</from><to>11</to><value>13</value></font-size><font-size><from>11</from><to>21</to><value>16</value></font-size><font-size><from>21</from><to>37</to><value>13</value></font-size><font-size><from>37</from><to>50</to><value>16</value></font-size><font-size><from>50</from><to>62</to><value>13</value></font-size><font-size><from>62</from><to>63</to><value>16</value></font-size><font-size><from>63</from><to>73</to><value>13</value></font-size><font-size><from>73</from><to>74</to><value>16</value></font-size><font-size><from>74</from><to>80</to><value>13</value></font-size><font-size><from>80</from><to>93</to><value>16</value></font-size><color><from>0</from><to>3</to><value>#777777</value></color><color><from>3</from><to>11</to><value>#ff502c</value></color><color><from>11</from><to>21</to><value>#777777</value></color><color><from>21</from><to>37</to><value>#ff502c</value></color><color><from>37</from><to>50</to><value>#777777</value></color><color><from>50</from><to>62</to><value>#ff502c</value></color><color><from>62</from><to>63</to><value>#777777</value></color><color><from>63</from><to>73</to><value>#ff502c</value></color><color><from>73</from><to>74</to><value>#777777</value></color><color><from>74</from><to>80</to><value>#ff502c</value></color><color><from>80</from><to>93</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>91-1580225598644</coId><text>ReactPage.js组件</text><inline-styles><font-size><from>0</from><to>14</to><value>16</value></font-size><color><from>0</from><to>14</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>3967-1580232155980</coId><text>import React from "react";
function Reactpage(){
    return (&lt;h2&gt;我是React页面&lt;/h2&gt;)
}
export default Reactpage;
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>28-1580225598648</coId><text>Flutter.js组件</text><inline-styles><font-size><from>0</from><to>12</to><value>16</value></font-size><color><from>0</from><to>12</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>6166-1580232162722</coId><text>import React from "react";
function Flutter(){
    return (&lt;h2&gt;我是Flutter页面&lt;/h2&gt;)
}
export default Flutter;
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>34-1580225598652</coId><text>Vue.js组件</text><inline-styles><font-size><from>0</from><to>8</to><value>16</value></font-size><color><from>0</from><to>8</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>8198-1580232171950</coId><text>import React from "react";
function Vue(){
    return (&lt;h2&gt;我是Vue页面&lt;/h2&gt;)
}
export default Vue;
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>47-1580225598656</coId><text>这样就相当于三个页面做好了，当然咱们作的是非常简单的。</text><inline-styles><font-size><from>0</from><to>27</to><value>16</value></font-size><color><from>0</from><to>27</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>16-1580225598657</coId><text>编写Video.js页面</text><inline-styles><bold><from>0</from><to>12</to><value>true</value></bold><font-family><from>2</from><to>10</to><value>monospace</value></font-family><font-size><from>0</from><to>2</to><value>20</value></font-size><font-size><from>2</from><to>10</to><value>13</value></font-size><font-size><from>10</from><to>12</to><value>20</value></font-size><color><from>0</from><to>2</to><value>#666666</value></color><color><from>2</from><to>10</to><value>#ff502c</value></color><color><from>10</from><to>12</to><value>#666666</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>08-1580225598657</coId><text>这个页面就是二级导航的编写，这个的编写也是课程的重点。</text><inline-styles><font-size><from>0</from><to>27</to><value>16</value></font-size><color><from>0</from><to>27</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>9428-1580232203236</coId><text>import React from "react";
import {  Route, Link  } from "react-router-dom";
import Reactpage from './video/ReactPage'
import Vue from './video/Vue'
import Flutter from './video/Flutter'


function Video(){
    return (
        &lt;div&gt;
            &lt;div className="topNav"&gt;
                &lt;ul&gt;
                    &lt;li&gt;&lt;Link to="/video/reactpage"&gt;React教程&lt;/Link&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;Link to="/video/vue"&gt;Vue教程&lt;/Link&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;Link to="/video/flutter"&gt;Flutter教程&lt;/Link&gt;&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;
            &lt;div className="videoContent"&gt;
                &lt;div&gt;&lt;h3&gt;视频教程&lt;/h3&gt;&lt;/div&gt;
                &lt;Route path="/video/reactpage/"   component={Reactpage} /&gt;
                &lt;Route path="/video/vue/"   component={Vue} /&gt;
                &lt;Route path="/video/flutter/"   component={Flutter} /&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    )
}
export default Video;
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>64-1580225598680</coId><text>修改AppRouter.js文件</text><inline-styles><bold><from>0</from><to>16</to><value>true</value></bold><font-family><from>2</from><to>14</to><value>monospace</value></font-family><font-size><from>0</from><to>2</to><value>20</value></font-size><font-size><from>2</from><to>14</to><value>13</value></font-size><font-size><from>14</from><to>16</to><value>20</value></font-size><color><from>0</from><to>2</to><value>#666666</value></color><color><from>2</from><to>14</to><value>#ff502c</value></color><color><from>14</from><to>16</to><value>#666666</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>83-1580225598683</coId><text>当我们的Video组件制作完成后，可以把它引入到AppRouter.js文件中，然后配置对应的路由。为了方便你的学习，这里给出了全部代码，并在重用修改的地方给予标注。</text><inline-styles><font-family><from>4</from><to>9</to><value>monospace</value></font-family><font-family><from>24</from><to>36</to><value>monospace</value></font-family><font-size><from>0</from><to>4</to><value>16</value></font-size><font-size><from>4</from><to>9</to><value>13</value></font-size><font-size><from>9</from><to>24</to><value>16</value></font-size><font-size><from>24</from><to>36</to><value>13</value></font-size><font-size><from>36</from><to>83</to><value>16</value></font-size><color><from>0</from><to>4</to><value>#777777</value></color><color><from>4</from><to>9</to><value>#ff502c</value></color><color><from>9</from><to>24</to><value>#777777</value></color><color><from>24</from><to>36</to><value>#ff502c</value></color><color><from>36</from><to>83</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>4260-1580232243556</coId><text>import React from "react";
import { BrowserRouter as Router, Route, Link  } from "react-router-dom";
import Index from './Pages/Index'
//--关键代码------------start
import Video from './Pages/Video'
//--关键代码------------end
import './index.css'

function AppRouter() {
    return (
      &lt;Router&gt;
          &lt;div className="mainDiv"&gt;
            &lt;div className="leftNav"&gt;
                &lt;h3&gt;一级导航&lt;/h3&gt;
                &lt;ul&gt;
                    &lt;li&gt; &lt;Link to="/"&gt;博客首页&lt;/Link&gt; &lt;/li&gt;
                    {/*--关键代码------------start*/}
                    &lt;li&gt;&lt;Link to="/video/"&gt;视频教程&lt;/Link&gt; &lt;/li&gt;
                    {/*--关键代码------------end*/}
                    &lt;li&gt;&lt;Link to=""&gt;职场技能&lt;/Link&gt; &lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;

            &lt;div className="rightMain"&gt;
                &lt;Route path="/"  exact component={Index} /&gt;
                 {/*--关键代码------------start*/}
                &lt;Route path="/video/"   component={Video} /&gt;
                 {/*--关键代码------------end*/}
            &lt;/div&gt;
          &lt;/div&gt;
      &lt;/Router&gt;
    );
  }

  export default AppRouter;
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>82-1580225598746</coId><text/><inline-styles/><styles><font-size>16</font-size></styles></para><para><coId>37-1580225598753</coId><text>P08: 实例-ReactRouter嵌套路由-3</text><inline-styles><bold><from>0</from><to>25</to><value>true</value></bold><font-size><from>0</from><to>25</to><value>20</value></font-size><color><from>0</from><to>25</to><value>#333333</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>70-1580225598754</coId><text>这节课把"职场技能"这个链接的嵌套路由也作了，如果你对嵌套路由已经很熟悉，可以跳过这节课，直接学习下一节课。但是你如果想把这个小实例作完整，你可以按照这节课来进行。</text><inline-styles><font-size><from>0</from><to>82</to><value>16</value></font-size><color><from>0</from><to>82</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>36-1580225598755</coId><text>编写第三级子页面</text><inline-styles><bold><from>0</from><to>8</to><value>true</value></bold><font-size><from>0</from><to>8</to><value>20</value></font-size><color><from>0</from><to>8</to><value>#666666</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>08-1580225598755</coId><text>在"职场技能"里只作两个子页面，"程序员加薪秘籍"和"程序员早起攻略"。在/src/Pages/workPlace目录下，新建两个文件Money.js和Getup.js，然后编写代码。</text><inline-styles><font-family><from>37</from><to>57</to><value>monospace</value></font-family><font-family><from>67</from><to>75</to><value>monospace</value></font-family><font-family><from>76</from><to>84</to><value>monospace</value></font-family><font-size><from>0</from><to>37</to><value>16</value></font-size><font-size><from>37</from><to>57</to><value>13</value></font-size><font-size><from>57</from><to>67</to><value>16</value></font-size><font-size><from>67</from><to>75</to><value>13</value></font-size><font-size><from>75</from><to>76</to><value>16</value></font-size><font-size><from>76</from><to>84</to><value>13</value></font-size><font-size><from>84</from><to>92</to><value>16</value></font-size><color><from>0</from><to>37</to><value>#777777</value></color><color><from>37</from><to>57</to><value>#ff502c</value></color><color><from>57</from><to>67</to><value>#777777</value></color><color><from>67</from><to>75</to><value>#ff502c</value></color><color><from>75</from><to>76</to><value>#777777</value></color><color><from>76</from><to>84</to><value>#ff502c</value></color><color><from>84</from><to>92</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>98-1580225598756</coId><text>Money.js</text><inline-styles><font-size><from>0</from><to>8</to><value>16</value></font-size><color><from>0</from><to>8</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>6140-1580232271692</coId><text>import React from "react";
function Money(){
    return (&lt;h2&gt;程序员加薪秘籍详情&lt;/h2&gt;)
}
export default Money;
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>92-1580225598760</coId><text>Getup.js</text><inline-styles><font-size><from>0</from><to>8</to><value>16</value></font-size><color><from>0</from><to>8</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>7858-1580232280324</coId><text>import React from "react";
function Getup(){
    return (&lt;h2&gt;程序员早起攻略详情&lt;/h2&gt;)
}
export default Getup;
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>80-1580225598763</coId><text>编写二级子页面Workplace</text><inline-styles><bold><from>0</from><to>16</to><value>true</value></bold><font-family><from>7</from><to>16</to><value>monospace</value></font-family><font-size><from>0</from><to>7</to><value>20</value></font-size><font-size><from>7</from><to>16</to><value>13</value></font-size><color><from>0</from><to>7</to><value>#666666</value></color><color><from>7</from><to>16</to><value>#ff502c</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>27-1580225598764</coId><text>在/src/Pages文件夹下建立一个Workplace.js页面，作为二级子页面。</text><inline-styles><font-family><from>1</from><to>11</to><value>monospace</value></font-family><font-family><from>19</from><to>31</to><value>monospace</value></font-family><font-size><from>0</from><to>1</to><value>16</value></font-size><font-size><from>1</from><to>11</to><value>13</value></font-size><font-size><from>11</from><to>19</to><value>16</value></font-size><font-size><from>19</from><to>31</to><value>13</value></font-size><font-size><from>31</from><to>42</to><value>16</value></font-size><color><from>0</from><to>1</to><value>#777777</value></color><color><from>1</from><to>11</to><value>#ff502c</value></color><color><from>11</from><to>19</to><value>#777777</value></color><color><from>19</from><to>31</to><value>#ff502c</value></color><color><from>31</from><to>42</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>4230-1580232293210</coId><text>import React from "react";
import {  Route, Link  } from "react-router-dom";
import Money from './workPlace/Money'
import Getup from './workPlace/Getup'


function WorkPlace(){
    return (
        &lt;div&gt;
            &lt;div className="topNav"&gt;
                &lt;ul&gt;
                    &lt;li&gt;&lt;Link to="/workplace/Moeny"&gt;程序员加薪秘籍&lt;/Link&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;Link to="/workplace/Getup"&gt;程序员早起攻略&lt;/Link&gt;&lt;/li&gt;

                &lt;/ul&gt;
            &lt;/div&gt;
            &lt;div className="videoContent"&gt;
                &lt;div&gt;&lt;h3&gt;职场软技能&lt;/h3&gt;&lt;/div&gt;
                &lt;Route path="/workplace/Moeny/"   component={Money} /&gt;
                &lt;Route path="/workplace/Getup/"   component={Getup} /&gt;

            &lt;/div&gt;
        &lt;/div&gt;
    )
}
export default WorkPlace;
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>48-1580225598782</coId><text>这个组件完成后，可以进入主路由里把二级页面配置一下。</text><inline-styles><font-size><from>0</from><to>26</to><value>16</value></font-size><color><from>0</from><to>26</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>55-1580225598783</coId><text>配置主路由AppRouter.js</text><inline-styles><bold><from>0</from><to>17</to><value>true</value></bold><font-family><from>5</from><to>17</to><value>monospace</value></font-family><font-size><from>0</from><to>5</to><value>20</value></font-size><font-size><from>5</from><to>17</to><value>13</value></font-size><color><from>0</from><to>5</to><value>#666666</value></color><color><from>5</from><to>17</to><value>#ff502c</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>94-1580225598784</coId><text>这个我就直接给出文件代码了，思路是先引入要配置的路由Workplace,然后配置路由,最后编写链接。</text><inline-styles><font-family><from>26</from><to>35</to><value>monospace</value></font-family><font-size><from>0</from><to>26</to><value>16</value></font-size><font-size><from>26</from><to>35</to><value>13</value></font-size><font-size><from>35</from><to>50</to><value>16</value></font-size><color><from>0</from><to>26</to><value>#777777</value></color><color><from>26</from><to>35</to><value>#ff502c</value></color><color><from>35</from><to>50</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>4191-1580232307053</coId><text>import React from "react";
import { BrowserRouter as Router, Route, Link  } from "react-router-dom";
import Index from './Pages/Index'
import Video from './Pages/Video'
import Workplace from './Pages/Workplace'
import './index.css'

function AppRouter() {
    return (
      &lt;Router&gt;
          &lt;div className="mainDiv"&gt;
            &lt;div className="leftNav"&gt;
                &lt;h3&gt;一级导航&lt;/h3&gt;
                &lt;ul&gt;
                    &lt;li&gt; &lt;Link to="/"&gt;博客首页&lt;/Link&gt; &lt;/li&gt;
                    &lt;li&gt;&lt;Link to="/video/"&gt;视频教程&lt;/Link&gt; &lt;/li&gt;
                    &lt;li&gt;&lt;Link to="/workplace"&gt;职场技能&lt;/Link&gt; &lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;

            &lt;div className="rightMain"&gt;
                &lt;Route path="/"  exact component={Index} /&gt;
                &lt;Route path="/video/"   component={Video} /&gt;
                &lt;Route path="/workplace/"   component={Workplace} /&gt;
            &lt;/div&gt;
          &lt;/div&gt;
      &lt;/Router&gt;
    );
  }


  export default AppRouter;
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>73-1580225598807</coId><text/><inline-styles/><styles><font-size>16</font-size></styles></para><para><coId>52-1580225598808</coId><text>P09: 后台动态获取路由进行配置</text><inline-styles><bold><from>0</from><to>17</to><value>true</value></bold><font-size><from>0</from><to>17</to><value>20</value></font-size><color><from>0</from><to>17</to><value>#333333</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>95-1580225598808</coId><text>小案例做完了，我们对React Router也有了更加清楚的了解。有时候作一个后台管理系统，菜单并不是写死的，而是通过后台接口获得的，这时候我们要如何根据后台接口编写我们的路由。这节课就模拟下后台获取路由配置，并编写动态路由配置的方法。</text><inline-styles><font-family><from>10</from><to>22</to><value>monospace</value></font-family><font-size><from>0</from><to>10</to><value>16</value></font-size><font-size><from>10</from><to>22</to><value>13</value></font-size><font-size><from>22</from><to>118</to><value>16</value></font-size><color><from>0</from><to>10</to><value>#777777</value></color><color><from>10</from><to>22</to><value>#ff502c</value></color><color><from>22</from><to>118</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>82-1580225598809</coId><text>模拟后台得到的JSON数据</text><inline-styles><bold><from>0</from><to>13</to><value>true</value></bold><font-size><from>0</from><to>13</to><value>20</value></font-size><color><from>0</from><to>13</to><value>#666666</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>28-1580225598810</coId><text>我们现在AppRouter.js文件里，模拟从后台得到了JSON字符串，并转换为了对象（我们只是模拟，就不真的去远端请求数据了）。模拟的代码如下:</text><inline-styles><font-family><from>4</from><to>16</to><value>monospace</value></font-family><font-size><from>0</from><to>4</to><value>16</value></font-size><font-size><from>4</from><to>16</to><value>13</value></font-size><font-size><from>16</from><to>73</to><value>16</value></font-size><color><from>0</from><to>4</to><value>#777777</value></color><color><from>4</from><to>16</to><value>#ff502c</value></color><color><from>16</from><to>73</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>1215-1580232541576</coId><text>let routeConfig =[
    {path:'/',title:'博客首页',exact:true,component:Index},
    {path:'/video/',title:'视频教程',exact:false,component:Video},
    {path:'/workplace/',title:'职场技能',exact:false,component:Workplace}
]
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>90-1580225598816</coId><text>循环出Link区域</text><inline-styles><bold><from>0</from><to>9</to><value>true</value></bold><font-size><from>0</from><to>9</to><value>20</value></font-size><color><from>0</from><to>9</to><value>#666666</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>69-1580225598817</coId><text>这时候一级导航就不能是写死了，需要根据得到的数据进行循环出来。直接使用map循环就可以。代码如下：</text><inline-styles><font-family><from>35</from><to>38</to><value>monospace</value></font-family><font-size><from>0</from><to>35</to><value>16</value></font-size><font-size><from>35</from><to>38</to><value>13</value></font-size><font-size><from>38</from><to>49</to><value>16</value></font-size><color><from>0</from><to>35</to><value>#777777</value></color><color><from>35</from><to>38</to><value>#ff502c</value></color><color><from>38</from><to>49</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>4382-1580232555772</coId><text>&lt;ul&gt;
    {
        routeConfig.map((item,index)=&gt;{
            return (&lt;li key={index}&gt; &lt;Link to={item.path}&gt;{item.title}&lt;/Link&gt; &lt;/li&gt;)
        })
    }
&lt;/ul&gt;
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>34-1580225598822</coId><text>这时候就可以把所有的Link标签都循环出来了。</text><inline-styles><font-size><from>0</from><to>23</to><value>16</value></font-size><color><from>0</from><to>23</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><para><coId>90-1580225598823</coId><text>循环出路由配置</text><inline-styles><bold><from>0</from><to>7</to><value>true</value></bold><font-size><from>0</from><to>7</to><value>20</value></font-size><color><from>0</from><to>7</to><value>#666666</value></color></inline-styles><styles><font-size>20</font-size></styles></para><para><coId>13-1580225598823</coId><text>按照上面的逻辑把Route的配置循环出来。代码如下:</text><inline-styles><font-family><from>8</from><to>13</to><value>monospace</value></font-family><font-size><from>0</from><to>8</to><value>16</value></font-size><font-size><from>8</from><to>13</to><value>13</value></font-size><font-size><from>13</from><to>26</to><value>16</value></font-size><color><from>0</from><to>8</to><value>#777777</value></color><color><from>8</from><to>13</to><value>#ff502c</value></color><color><from>13</from><to>26</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>8070-1580232564053</coId><text>{
    routeConfig.map((item,index)=&gt;{
        return (&lt;Route key={index} exact={item.exact} path={item.path}  component={item.component} /&gt;)
    })
}
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>17-1580225598825</coId><text>AppRouter.js的全部代码。</text><inline-styles><font-family><from>0</from><to>12</to><value>monospace</value></font-family><font-size><from>0</from><to>12</to><value>13</value></font-size><font-size><from>12</from><to>18</to><value>16</value></font-size><color><from>0</from><to>12</to><value>#ff502c</value></color><color><from>12</from><to>18</to><value>#777777</value></color></inline-styles><styles><font-size>16</font-size></styles></para><code><coId>8321-1580232589491</coId><text>import React from "react";
import { BrowserRouter as Router, Route, Link  } from "react-router-dom";
import Index from './Pages/Index'
import Video from './Pages/Video'
import Workplace from './Pages/Workplace'
import './index.css'

function AppRouter() {
    let routeConfig =[
      {path:'/',title:'博客首页',exact:true,component:Index},
      {path:'/video/',title:'视频教程',exact:false,component:Video},
      {path:'/workplace/',title:'职场技能',exact:false,component:Workplace}
    ]
    return (
      &lt;Router&gt;
          &lt;div className="mainDiv"&gt;
            &lt;div className="leftNav"&gt;
                &lt;h3&gt;一级导航&lt;/h3&gt;
                &lt;ul&gt;
                    {
                      routeConfig.map((item,index)=&gt;{
                          return (&lt;li key={index}&gt; &lt;Link to={item.path}&gt;{item.title}&lt;/Link&gt; &lt;/li&gt;)
                      })
                    }
                &lt;/ul&gt;
            &lt;/div&gt;

            &lt;div className="rightMain"&gt;
                    {
                      routeConfig.map((item,index)=&gt;{
                          return (&lt;Route key={index} exact={item.exact} path={item.path}  component={item.component} /&gt;)
                      })
                    }

            &lt;/div&gt;
          &lt;/div&gt;
      &lt;/Router&gt;
    );
  }


  export default AppRouter;
</text><inline-styles/><styles/><language>javascript</language><theme>default</theme></code><para><coId>65-1580225598853</coId><text/><inline-styles/><styles><font-size>16</font-size></styles></para></body></note>